<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python环境配置</title>
      <link href="/2024/10/26/python-env/"/>
      <url>/2024/10/26/python-env/</url>
      
        <content type="html"><![CDATA[<blockquote><p>观前提醒：请先参阅以下文章，遇到问题请先自行使用搜索引擎查找解决方案。<br><a href="https://lug.ustc.edu.cn/wiki/doc/smart-questions/">提问的智慧</a>或者<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧</a><br><a href="https://imchenway.com/2019/12/14/%E5%96%84%E7%94%A8Google/">善用google</a>和<a href="https://csdiy.wiki/%E5%BF%85%E5%AD%A6%E5%B7%A5%E5%85%B7/%E4%BF%A1%E6%81%AF%E6%A3%80%E7%B4%A2/">信息检索</a></p></blockquote><h2 id="解释型语言"><a href="#解释型语言" class="headerlink" title="解释型语言"></a>解释型语言</h2><ul><li><p><strong>编译型语言</strong>需要将项目先<strong>编译</strong>成机器码，再执行。</p></li><li><p><strong>解释型语言</strong>逐行<strong>解释</strong>。解释的过程中就包括了编译，整个项目执行完后，会产生一个编译产物<code>*.pyc</code>文件在<code>__pycache__</code>目录下，下次运行时直接加载这个文件，就不需要再次编译。可理解为缓存文件。</p></li></ul><h2 id="python-相关工具介绍"><a href="#python-相关工具介绍" class="headerlink" title="python 相关工具介绍"></a>python 相关工具介绍</h2><ol><li>你编辑代码，需要<strong>编辑器</strong>（记事本，vim，VS Code等）</li><li>你运行代码，需要<strong>解释器</strong>（python.exe，ipython.exe等）</li><li>你调试代码，需要<strong>调试器</strong>（pdb，ipdb等）</li><li>你安装第三方库，需要<strong>包管理器</strong>（pip，conda等）</li><li>你安装环境，需要<strong>虚拟环境</strong>（virtualenv，venv等）</li><li>集成多重功能于一体的，叫<strong>集成开发环境 IDE</strong>（如PyCharm）</li></ol><p>对于上面的工具，我做一些简单介绍：</p><ul><li><strong>编辑器</strong>：VS Code 非常轻量，下载方便（windows中有两种下载方式，一种是从官网下载，一种是从微软商店里下载）相关的配置文件你也可以保存在 github 上，方便你在其他人电脑（或者你自己的其他设备）上快速布置你的开发环境，或者在不小心丢失了配置时从 github 上直接下载。而且 VS Code 高度可拓展，你可以安装各种插件来提高你的开发效率。而且 VS Code 基本支持所有语言，不需要像 IDE 那样学一门语言就要多学一个 IDE 。另外，VS Code 还支持 wsl2</li><li><strong>解释器</strong>：python 有很多版本的解释器，比如 CPython（由 Python 创始人开发，用C语言写出来的），PyPy（用 Python 写出来的）</li><li><strong>IPython</strong>：IPython 是可以基于 CPython 的交互式解释器，常与 Jupyter Notebook 配合使用。</li><li><strong>包管理器</strong>：你再看别人代码时，经常在开头看到<code>import xxx</code>，但是在你自己这却会报错，这是因为你从官网下载了 Python 后，里面是内置了很多库，但是就是没有这个报错的库，这时你就需要用包管理器来安装这个库，比如 pip，conda。在这里经常出的问题是还原问题，这在院科协 python 组的招新试题中已有提醒。</li><li><strong>虚拟环境</strong>：你使用包管理器安装的第三方库是有版本的，然而有些库的版本不兼容，你把他们安装在一起就会冲突，所以需要用虚拟环境把他们隔开。<code>conda create -n 虚拟环境名称 python=某一个python版本</code>即可创建一个虚拟环境，然后<code>conda activate 虚拟环境名称</code>激活虚拟环境，在虚拟环境里安装第三方库。你会发现，conda 不仅可以下载第三方库，也可以管理虚拟环境。</li><li><strong>anaconda</strong>：你装了 anaconda 就有了 conda 和 Jupyter Notebook。</li><li><strong>Jupyter Notebook</strong>：交互式计算环境。当你装了 anaconda 后，你就可以用 anaconda 打开一个在浏览器里的 Jupyter Notebook 了。当然，你也可以使用 VS Code 打开，文件名后缀为<code>.ipynb</code>。</li><li><strong>python 版本选择</strong>：截至目前，python 3.13 版本是最新的，但不是说最新的最好用，你要看你想要使用的第三方库支持的是哪一个版本，虚拟环境就是可以帮助你选择版本的。</li></ul><p>你可以选择：</p><ol><li>最朴素的环境：记事本 + 从官网下载的 python（包括了python解释器和pip包管理器）+ virtualenv（创建虚拟环境）</li><li>推荐：VS Code + anaconda3 （安装后就不需要再从官网安装 python 了）</li><li>当然，你也可以选择只使用一个 anaconda 在浏览器中打开 Jupyter Notebook。</li><li>云开发环境：Google Colab，Kaggle 等。</li></ol><h2 id="安装-anaconda3"><a href="#安装-anaconda3" class="headerlink" title="安装 anaconda3"></a>安装 anaconda3</h2><blockquote><p>观前提醒，请先从各种你能想到的途径学会科学上网，下载一个东西，凡是以小时记的，基本上都需要科学上网。</p></blockquote><ul><li><p>不科学上网使用镜像站下载快：<br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/?C=M&O=D">清华大学开源软件镜像站</a></p></li><li><p>官网下载(不科学上网需要5分钟以上时间，你猜猜是多久呢)：<br><a href="https://www.anaconda.com/download">官网</a></p></li></ul><p><img src="/./images/python-env/env_4.png" alt="跳过注册"></p><p><img src="/./images/python-env/env_5.png" alt="点击下载"></p><h3 id="法一：手动配置环境变量（我相信你以后肯定还是会走这条路的）"><a href="#法一：手动配置环境变量（我相信你以后肯定还是会走这条路的）" class="headerlink" title="法一：手动配置环境变量（我相信你以后肯定还是会走这条路的）"></a>法一：手动配置环境变量（我相信你以后肯定还是会走这条路的）</h3><p>接下来，你可以选择一路 next 到底，安装完成后，再配置环境变量。在你电脑中找到下图中对应的三个环境变量，注意更改成你自己的环境路径。</p><p><img src="/./images/python-env/env_3.png" alt="anaconda3环境变量配置"></p><p><code>win+r</code>打开运行框，输入<code>cmd</code>打开终端，在<code>cmd</code>中输入 <code>conda --version</code> 验证是否安装成功。</p><h3 id="法二：自动配置（适用初学者）"><a href="#法二：自动配置（适用初学者）" class="headerlink" title="法二：自动配置（适用初学者）"></a>法二：自动配置（适用初学者）</h3><p>我们只说需要改动的地方：</p><p><img src="/./images/python-env/env_6.png" alt="随便截了张图"></p><p>这里红字就是说会自动给你添加环境变量。</p><p>最后这个页面，两个东西可以不勾选，这是安装后打开 anaconda 和了解它信息的东西。</p><p><img src="/./images/python-env/env_7.png" alt="不要勾选"></p><h2 id="安装-VS-Code"><a href="#安装-VS-Code" class="headerlink" title="安装 VS Code"></a>安装 VS Code</h2><p><a href="https://code.visualstudio.com/">官网下载点这里</a></p><p><img src="/./images/python-env/vscode.png"></p><p>点击<code>download</code>会跳转页面，已经在下载了。<code>ctrl+j</code>会打开浏览器的下载管理，里面可以查看下载进度。下载完成后，双击安装包，安装程序会自动安装。</p><h3 id="如果你只希望能够使用"><a href="#如果你只希望能够使用" class="headerlink" title="如果你只希望能够使用"></a>如果你只希望能够使用</h3><ol><li>在<code>User Installer</code>和<code>System Installer</code>中选择前者（即默认）。</li><li>同意协议。</li><li>选择安装路径（非中文）。</li><li>选择附加任务：全部勾选（桌面快捷方式就是在桌面上会不会有这个图标，可以根据自己的喜好选择，如果不勾选，你还是可以有n种方式打开的;添加到PATH一定要勾选）。</li><li>准备安装：安装。</li><li>安装完成：完成。</li></ol><h3 id="深入理解环境变量"><a href="#深入理解环境变量" class="headerlink" title="深入理解环境变量"></a>深入理解环境变量</h3><p>我们只讨论上述安装过程中的第4步，也就是环境变量的问题。</p><p>你下载了一个东西，安装程序把它安装在一个地方，但是你的程序怎么知道它被安装在哪里呢？</p><p>在Windows操作系统中，查找环境变量的顺序通常遵循以下步骤（由AI生成）：</p><ol><li><p><strong>当前用户的环境变量</strong>：首先，系统会查找当前用户设置的环境变量。这些变量一般是在用户的用户配置文件中定义的。</p></li><li><p><strong>系统环境变量</strong>：如果在当前用户的环境变量中未找到，则系统接下来会查找系统范围内的环境变量。这些环境变量对所有用户都是可用的。</p></li><li><p><strong>特定应用程序的环境变量</strong>：某些应用程序可能会设置自己的环境变量，这些变量通常在应用程序启动时定义。如果这些环境变量存在，优先级高于用户和系统变量。</p></li><li><p><strong>默认环境变量</strong>：如果以上步骤都未能找到所需的变量，则可能会使用默认的环境变量。</p></li></ol><p>打开环境变量设置的最快方法：</p><ol><li>按下<code>win</code>键，启动搜索</li><li>输入<code>env</code></li><li><code>enter</code></li><li>点击<code>环境变量</code></li></ol><p><img src="/./images/python-env/env_1.png"></p><p><img src="/./images/python-env/env_2.png"></p><p>你设置的环境变量，无论是用户还是系统，理论上都能找到，都能使用。</p><h3 id="配置-VS-Code"><a href="#配置-VS-Code" class="headerlink" title="配置 VS Code"></a>配置 VS Code</h3><p><a href="https://code.visualstudio.com/docs/python/python-quick-start">官方教程</a></p><p><img src="/./images/python-env/extension.png" alt="拓展"></p><h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p>接下来，你就可以按 <code>ctrl+f5</code> 运行程序了。或者按右上角的小三角</p><p><img src="/./images/python-env/run.png" alt="运行程序"></p><p>当然，你也可以用命令行，在终端输入<code>python 文件名.py</code>运行程序。加<code>-m</code>参数可以让解释器直接运行模块，产生<code>*.pyc</code>文件。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开会的要义</title>
      <link href="/2024/10/13/meeting/"/>
      <url>/2024/10/13/meeting/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：由两次集体项目开发有感，下文第一次项目代号S,第二次项目代号Q</p><p>本文仅讨论小团队中的开会和管理，约为10人左右，例如临时组建的小团队和沆瀣一气的家伙们组建的小团队，其他规模团队应当有其他的管理方式</p></blockquote><h3 id="少数服从多数的不合理性"><a href="#少数服从多数的不合理性" class="headerlink" title="少数服从多数的不合理性"></a>少数服从多数的不合理性</h3><p>在团队讨论中，经常会出现一些需要集体性进行决策的场景，比如决定项目的开发计划、项目的分工等，于是会有投票的决策方式。但是，这种看似公平公正的决策方式不一定是最优决策。有时在生死攸关的问题上，少数人会有更加聪明的独到的想法，但却由于多数人的无知和盲目而被动接受少数服从多数的结果。</p><p>我们应当充分尊重有不同见解，或者有坚定立场，或者有能力解决问题的成员，而不是一味地服从少数服从多数的原则。</p><p>我偏好在投票和讨论中设置弃权以为少数更加有用的想法不被埋没。</p><h3 id="民主共和还是霸道独裁"><a href="#民主共和还是霸道独裁" class="headerlink" title="民主共和还是霸道独裁"></a>民主共和还是霸道独裁</h3><p>在项目发起阶段，我认为项目发起人应当充分的霸道和独裁，在项目的全局性决策上，就应当做好所有决策，以此为基础吸引其他合作者的参与。合作者在参与前，应当首先充分的了解项目的背景和目的，以及为实现该目的所准备使用的工具和资源。应当保证核心人员的全局性参与。</p><p>我偏好在决定上的霸道和独裁，但不排除需要群策群力的情况。</p><h3 id="群体还是个人"><a href="#群体还是个人" class="headerlink" title="群体还是个人"></a>群体还是个人</h3><p>在开会或者讨论时，我们的讨论对象看似是整个群体，但群体终归还是由个人组成，特别是这样的小团队。在群体中的交流效果对于个人而言永远低于个人与个人的交流效果。</p><p>我偏好在发布集体性决策结果后，再针对每个人的特性，再发一条针对性的消息给相应个人。</p><h3 id="特定职位（偏将和吉祥物）"><a href="#特定职位（偏将和吉祥物）" class="headerlink" title="特定职位（偏将和吉祥物）"></a>特定职位（偏将和吉祥物）</h3><p>我认为设置个性化的特定职位将有助于团队成员明确自己的工作职责。</p><p>我偏好在团队中默认一个偏将的存在，这将大大减轻项目总负责人的决策压力。</p><p>如果能有一个吉祥物就更好了。</p><h3 id="学习成本"><a href="#学习成本" class="headerlink" title="学习成本"></a>学习成本</h3><p>项目发起人应当意识到其他人和自己的技术水平有所差别，在项目发起阶段，应当格外重视学习成本，而不是一直推项目进度。</p><p>在进行开会讨论前，也应保证与会者进行了相关学习，都能听懂会议内容。</p><h3 id="沟通成本和集体开发"><a href="#沟通成本和集体开发" class="headerlink" title="沟通成本和集体开发"></a>沟通成本和集体开发</h3><p>在项目S中，我们采取了集体开发的方式。在这种方式下，团队成员间的沟通交流成本应当是最低的。但不免闲聊（但是还是聊的技术相关的，别的也很开心）</p><p>我并不认为集体开发中闲聊降低开发效率，反而是减少了沟通成本，也有固定的开发时间，可以更好的集中精力。</p><p>所以如果有条件进行集体开发，我推荐进行。</p><h3 id="简短有力"><a href="#简短有力" class="headerlink" title="简短有力"></a>简短有力</h3><p>如果有开会，会议应当尽可能简短有力，没有人会喜欢花太多时间在开会上，仅是”开会”这一词便足以引起反感。</p><p>我认为开会应当尽量避免讨论太多细枝末节，而是聚焦于项目的全局性决策。议题应当明确，会议应当足够具有重要性。</p><h3 id="会前准备"><a href="#会前准备" class="headerlink" title="会前准备"></a>会前准备</h3><p>没有会前准备的会议将是一团垃圾。会前应当充分准备，包括会议的主题、议题、时间、地点、参会人员、准备材料等。</p><p>项目发起人可在会前指定在会上谁该作如何的发言，以及准备什么材料。这可以避免冷场。</p><p>我偏好在会前安排好发言顺序，让发言人有充足准备时间和适当的紧迫感。</p><h3 id="会议记录"><a href="#会议记录" class="headerlink" title="会议记录"></a>会议记录</h3><p>所有人都应当有记录会议内容的习惯。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔法导论</title>
      <link href="/2024/10/10/magic/"/>
      <url>/2024/10/10/magic/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="88ff6844433f14a4f3ed40c585ea881baba63347bf7a9a02d0ab2f18f96a3cd6">165d50f05814027fb7fe5e4ae8a088d8240dac90f2f2cc3be4b182594285803aa90d5e3a60155c3b6fba9885d0b0480e4b14e99fb58cc3fc86d1abc8fdfaf28a16bf4adb369703322d2d060caf92840cd9167ddd07a3a2e9a2275c5a343f16d6c95beac9ad4fbd33db59e0d638261614c24f71051a75874bbf29e439209ccc4751b9d7ac2968c960775ee1624b43de5087746d12ade25c902ff15c57901d5a9f01fd44b503b36f5438ef063e3a0297b9c42dfde8122021670e038f89fe652d2a3331a23b68ba068c6e577c707485084f7d319a7fd320e74e8f294d42d2760940c9ed38f3cea0c2a1cefe5228458ca93ff1a1d36d5e03934c607cf535b50dfb20</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PPT学习笔记</title>
      <link href="/2024/10/09/PPT/"/>
      <url>/2024/10/09/PPT/</url>
      
        <content type="html"><![CDATA[<p>学习地址：</p><p><a href="https://www.bilibili.com/video/BV1w54y1Q7cZ/?share_source=copy_web&vd_source=4e6e3d05c54fbafa49b2a00b5cc81815">PPT教程 | PPT高手之路，零基础做出高逼格PPT，免费PPT设计制作技巧教学！OFFICE&#x2F;WPS&#x2F;演示&#x2F;幻灯片&#x2F;PPT模板&#x2F;keynote&#x2F;汇报&#x2F;总结</a></p><p>第11集最后关于各种 PPT 板式和如何将 Word 一步步变为 PPT 的讲解，值得回味。</p><h3 id="PPT-中刚开始容易忽视的概念"><a href="#PPT-中刚开始容易忽视的概念" class="headerlink" title="PPT 中刚开始容易忽视的概念"></a>PPT 中刚开始容易忽视的概念</h3><ol><li>母版：母版是指PPT的基础模板，它包含了所有页面的基本设置，如背景、字体、颜色、布局、动画、透明度等。</li><li>模板：模板是指PPT的布局模板，它是指一套完整的PPT模板，包括了所有页面的基本设置，如背景、字体、颜色、布局、动画、透明度等。</li><li>布局：布局是指PPT页面的排版方式，它决定了PPT页面的版式、版心、版式。</li><li>占位符：占位符是指PPT页面上用来插入其他内容的空白区域，它可以用来插入图片、形状、表格、文本等。</li><li>wps 与 office 的关系和区别</li></ol><h3 id="PPT-默认设置"><a href="#PPT-默认设置" class="headerlink" title="PPT 默认设置"></a>PPT 默认设置</h3><ol><li>外观</li><li>150次撤回</li><li>自动保存</li><li>字体设置</li><li>标尺，参考线，网格线</li><li>插入形状为默认形状</li><li>图片压缩</li><li>导出</li></ol><h3 id="PPT-快捷键"><a href="#PPT-快捷键" class="headerlink" title="PPT 快捷键"></a>PPT 快捷键</h3><p>左手键盘，右手鼠标</p><ol><li><code>shift</code> 水平&#x2F;竖直移动，等比例放大缩小（点击生成），旋转 15 度</li><li><code>ctrl+D</code> 快速复制（复制空间和距离）</li><li><code>ctrl+鼠标拖拽</code> 复制</li><li><code>ctrl+m</code>&#x2F;<code>enter</code> 复制页面</li><li><code>ctrl+g</code> 组合</li><li><code>ctrl+shift+g</code> 取消组合</li><li><code>ctrl+y</code> 撤销</li><li><code>ctrl+shift+复制</code> 水平复制</li><li><code>ctrl+shift+alt+放大</code> 等比例中心放大</li><li><code>ctrl+shift+c``ctrl+shift+v</code> 格式刷</li><li><code>ctrl+[``ctrl+]``ctrl+shift+[</code> 向上&#x2F;向下移动一层&#x2F;向上移动一层</li><li><code>=lorem()</code> 自动生成文本</li></ol><h3 id="形状组合"><a href="#形状组合" class="headerlink" title="形状组合"></a>形状组合</h3><p>内置 200 多种</p><ol><li>合并形状</li></ol><ul><li>结合: 两个形状合并变成一个形状</li><li>组合: 删除重合部分，保留未重合部分</li><li>拆分: 重合部分和未重合部分拆分成三个部分</li><li>相交: 只保留重合区域</li><li>剪除: 保留先选择的图形，删除后选择的图形</li></ul><ol start="2"><li>绘制图标<br>图标下载:阿里巴巴矢量图标库</li></ol><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>底纹</p><p>框线</p><p>单元格</p><ol><li>主题色从 logo 中获取（取色器）</li><li>内容行双色交替（白色+白色与logo色间接中最接近白色的色）</li><li>内框线虚化（内框线：0.5磅 + 笔颜色 白色 背景1 深色25%），外框线加粗（2.25磅 + 深黑色）</li><li>字体：微软雅黑 + 标题行白色 + 内容行次一级黑色 + 标题行字大于内容行 + 居中</li></ol><h3 id="编辑顶点"><a href="#编辑顶点" class="headerlink" title="编辑顶点"></a>编辑顶点</h3><ul><li>顶点<ol><li>平滑顶点-两个空点在同一条直线上且长度一致</li><li>直线点-两个空点在同一条直线上且长度不一致</li><li>角部顶点-两个空点不在同一直线上且长度不一致</li></ol></li><li>线段<ol><li>抻直弓形</li><li>曲线段</li><li>开放路径</li></ol></li></ul><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><p>遮罩动画</p><p>3D 动画</p><h3 id="图片获取"><a href="#图片获取" class="headerlink" title="图片获取"></a>图片获取</h3><p>手机壁纸</p><p>摄影协会</p><p><a href="https://magdeleine.co/">Magdeleine</a><br><a href="https://www.pexels.com/fr-fr/">Pexels</a><br><a href="https://pixabay.com/">pixabay</a><br><a href="https://mani-unsplash-clone.netlify.app/">Unsplash</a></p><h3 id="icon"><a href="#icon" class="headerlink" title="icon"></a>icon</h3><p><a href="https://icons8.com/">icons8</a><br><a href="https://www.cleanpng.com/">cleanpng</a></p><h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><p>图片墙</p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>思源黑体</p><h3 id="相关软件"><a href="#相关软件" class="headerlink" title="相关软件"></a>相关软件</h3><p>画图3D 导出 .3mf 文件</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>地图素材注意合法</p><h3 id="第三方辅助软件"><a href="#第三方辅助软件" class="headerlink" title="第三方辅助软件"></a>第三方辅助软件</h3><p>Canva 可画</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim --&gt; nvim</title>
      <link href="/2024/09/21/vim/"/>
      <url>/2024/09/21/vim/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c4384f0c5a2aff88efa6b36c5b01c38291baad7815559163397db1decf0b7de0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的私家花园🌷</title>
      <link href="/2024/09/20/garden/"/>
      <url>/2024/09/20/garden/</url>
      
        <content type="html"><![CDATA[<h2 id="9月20日"><a href="#9月20日" class="headerlink" title="9月20日"></a>9月20日</h2><p><img src="/images/garden/flower_1.png" alt="保温杯催芽风铃草"></p><p><img src="/images/garden/flower_2.png" alt="方便面桶催芽紫罗兰"></p><p><img src="/images/garden/flower_0.png" alt="我的私家花园"></p><h2 id="9月26日"><a href="#9月26日" class="headerlink" title="9月26日"></a>9月26日</h2><p>雨，没有早八，先去了学校的湖边看花观鸟。</p><p>惊喜有两盆蒜发芽了🌱🌱</p><p><img src="/images/garden/flower_3.png" alt="花盆1"></p><p><img src="/images/garden/flower_4.png" alt="花盆2"></p><p>更正上图，我应该养的是风铃花。</p><p>很担心紫罗兰和风铃花的养殖难度。</p><p>但，亲爱的，我相信你总能给我惊喜。</p><h2 id="10月3日"><a href="#10月3日" class="headerlink" title="10月3日"></a>10月3日</h2><p>连续几天上吐下泻，又有了感冒的前兆，真是不幸呢。</p><p>紫罗兰和风铃花迟迟不肯发芽，我怀疑他们已经没有可能了。但就在这绝望之际，亲爱的，你总是能给我惊喜。</p><p><img src="/images/garden/flower_5.png" alt="发芽"></p><h2 id="10月7日"><a href="#10月7日" class="headerlink" title="10月7日"></a>10月7日</h2><p>听雨，感冒但不严重。</p><p><img src="/images/garden/flower_6.png" alt="发芽"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>皈依arch神教</title>
      <link href="/2024/09/13/archlinux/"/>
      <url>/2024/09/13/archlinux/</url>
      
        <content type="html"><![CDATA[<h2 id="起因-————-wsl2-和虚拟机无法使用"><a href="#起因-————-wsl2-和虚拟机无法使用" class="headerlink" title="起因 ———— wsl2 和虚拟机无法使用"></a>起因 ———— wsl2 和虚拟机无法使用</h2><p>8月初，因为网络、操作系统和 gpu 的问题，我的计算机各方面的学习都举步维艰。<br>在 windows11 上，wsl2因为神秘原因，一直在报如下的错误，导致依赖于他的 docker 也无法正常运行。</p><p><img src="/images/archlinux/wsl2_bug.png" alt="wsl2_bug.png"></p><p>在安装成功 archlinux 之后，才找到解决方案：<br>在用户目录 %USERPROFILE% 下创建一个配置文件.wslconfig，写入内容：<code>[experimental] networkingMode=mirrored</code></p><h2 id="热身-————-在华硕中安装-debian"><a href="#热身-————-在华硕中安装-debian" class="headerlink" title="热身 ———— 在华硕中安装 debian"></a>热身 ———— 在华硕中安装 debian</h2><p>我的华硕是一台上古机子，基本无法作为日常工作使用，但是因为双硬盘，所以就拿来作双系统安装的练手。</p><h2 id="正式开始-————-安装-archlinux"><a href="#正式开始-————-安装-archlinux" class="headerlink" title="正式开始 ———— 安装 archlinux"></a>正式开始 ———— 安装 archlinux</h2><p>我是参考这篇文章来安装 arch 的：<a href="https://arch.icekylin.online/guide/rookie/basic-install.html">arhclinux简明安装</a></p><p>补充：<a href="https://blog.linioi.com/posts/18/#%E5%AF%B9%E7%A1%AC%E7%9B%98%E8%BF%9B%E8%A1%8C%E5%88%86%E5%8C%BA">Arch Linux + Windows 双系统安装教程</a></p><h3 id="进入-bios-界面"><a href="#进入-bios-界面" class="headerlink" title="进入 bios 界面"></a>进入 bios 界面</h3><p>华为电脑进入 bios 界面的方法是：在电脑启动键盘高亮时，狂按 <code>f2</code> 键，进入 bios 界面。</p><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><p>我在安装 debian12 和 arch 时，都是连的家庭网络，在无图形化界面连接网络时，除了家里网真的太差以外，没什么问题。而之后帮助朋友安装 arch 时，是在学校。连接校园网需要打开浏览器来进行认证，认证完毕后，才能连接到校园网。但是现在的 arch 还没有图形界面，所以是无法连接校园网的，还得是手机热点。不过还有网络名字中文的问题，arch 刚开始时还没有中文输入法，所以网络名字如果有中文还得先改成英文。</p><h3 id="分区，格式化与挂载"><a href="#分区，格式化与挂载" class="headerlink" title="分区，格式化与挂载"></a>分区，格式化与挂载</h3><p>按照简明安装教程安装 arch 的过程中，最容易出问题的就是这一部分。<br>由于教程并没有明确说明要挂载在哪一个分区，我和朋友在挂载时，都误将 &#x2F;boot 挂载到和 &#x2F; 与 &#x2F;home 同一个分区上，导致在输入<code>grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Arch</code>命令时，提示 &#x2F;boot 目录不是 efi 分区。（此时 <code>exit</code> 退出环境重新分区）<br>由于我的华为电脑是单硬盘，装系统划分 efi 分区的话可以让两个系统共用一个 efi 分区（但千万不要格式化这一 efi 分区）。但是我的 windows11 使用的 efi 分区已经满了，所以只能再建一个 efi 分区。于是，正常来说，arch 应该分到一个 efi 分区，一个 swap 分区，还有一个根分区，其下应该挂载 &#x2F; 和 &#x2F;home 目录。</p><p><img src="/images/archlinux/lsblk_f.png" alt="lsblk_f.png"></p><h3 id="在-grub-界面加入-windows-启动项"><a href="#在-grub-界面加入-windows-启动项" class="headerlink" title="在 grub 界面加入 windows 启动项"></a>在 grub 界面加入 windows 启动项</h3><p><a href="https://wrye.dev/posts/repair-grub-windows-uefi-boot/">记修复 Arch Linux grub + Windows Boot Manager 双系统 UEFI 引导</a></p><p>1.进入 Linux 终端编辑 &#x2F;etc&#x2F;default&#x2F;grub，取消注释或新增 GRUB_DISABLE_OS_PROBER&#x3D;false 一行</p><p>2.生成 grub.cfg</p><p><code>sudo grub-mkconfig -o /boot/grub/grub.cfg</code></p><p>3.一般情况下，此时的 grub 会返回其已发现 Windows Boot Manager 的提示</p><p>4.重启进入 grub 引导，会发现 grub 新增了 Windows 之选项</p><h3 id="声音"><a href="#声音" class="headerlink" title="声音"></a>声音</h3><p>按照简明安装教程安装后，我的 arch 是发不出声音的，在该教程的常见问题排除与解决里有这一块说明。但按照教程操作之后还是发不出声音。经过排查，发现在 <code>alsamixer</code>中，我的<code>headphone</code>是静音状态，只要使用命令<code>alsamixer init</code>，就能正常发声。</p><p><img src="/images/archlinux/alsamixer.png" alt="alsamixer.png"></p><p>但是每次重启<code>headphone</code>项就会变成静音状态。最后只能加一个开机自动启动脚本来解决。</p><p><img src="/images/archlinux/alsa_init_sh.png" alt="alsamixer_init.sh.png"></p><p>虽然它显示执行失败，但实际上这个命令的确执行了，声音也能发出来。</p><p><img src="/images/archlinux/alsa_init.png" alt="alsa_init.png"></p><h3 id="蓝牙"><a href="#蓝牙" class="headerlink" title="蓝牙"></a>蓝牙</h3><p>华为蓝牙鼠标可以连接三个设备。</p><p><img src="/images/archlinux/mouse.png" alt="mouse.png"></p><p>第三个亮点已经配对了 win 的蓝牙，第二个亮点匹配了 arch 的蓝牙。</p><p>耳机因为在发声前配对了 arch 的蓝牙,在声音问题解决后，显示已配对但是连接不上 arch，解决方法是删除该配对再连接一次，</p><h3 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h3><p>我使用的是 timeshift 来进行快照。但是我在进行恢复快照操作重启后，发现系统无法启动，提示 &#x2F;home 目录无法正常挂载。</p><p><img src="/images/archlinux/home%E6%8C%82%E8%BD%BD.png" alt="home挂载.png"></p><p>在查看系统日志文件后得到解决方法：在 &#x2F;etc&#x2F;fstab 文件中，删去&#x2F;home 那行 <code>subvolid</code>项。</p><p><img src="/images/archlinux/fstab.png" alt="fstab.png"></p><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><p>我选用的是 nekoray + mitce ，只开启 tun 模式。对于我来说，只开启系统代理或者系统代理+tun模式都不太行（有概率）。但目前的方案在晚上依然很卡。<br>之后登陆校园网时，无法打开浏览器还是得关掉代理。</p><p>9月15日，mitce寄了。</p><p>于是还是安装了魔法猫咪 clash verge。订阅机场：<a href="https://bajie.xyz/login">八戒机场</a><br>clash verge 可谓是我所有用过的代理中配置最简单的了。<br><a href="https://blog.linioi.com/posts/clash-on-arch/">Archlinux 中 clash 配置教程</a></p><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>在迁移博客时，首先是要安装 node ，然后安装 npm ，最后安装 hexo 。<br>但是因为 node 版本过高（22），hexo 使用时会报一个<code>punycode</code>废弃的错。查文档找到的解决方案都不管用，最后决定降低 node 版本到20。<br>但是<code>sudo pacman -S nodejs</code>命令下载的 node 版本无法通过 n 来降低版本。最终整个解决方案是这样的：<br><code>sudo pacman -S nodejs</code><br><code>sudo npm install -g n</code><br><code>n 20.12.2</code><br><code>sudo pacman -R npm</code><br>在删除由 pacman 安装的 npm 之后，n 所下载的 node 就可以发挥作用了。<br>之后<code>hexo clean</code>等一系列命令在 linux 下都要加个 npx 。于是我加了一系列别名来解决这个问题。</p><p><img src="/images/archlinux/alias.png" alt="alias.png"></p><p>由于各类插件体积实在太大，我的插件是从 package.json 文件中导出来，然后放在脚本文件里执行再安装的。</p><h3 id="github-登陆"><a href="#github-登陆" class="headerlink" title="github 登陆"></a>github 登陆</h3><p>因为 2fa 的存在，我的 github 登陆在linux下无法用指纹登陆。所以采用了浏览器的 2fa 插件。</p><p><img src="/images/archlinux/%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E5%99%A8.png" alt="身份验证器.png"></p><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><p>从 windows 传文件到 linux 下，zip格式普通的解压缩会出现一堆乱码，需要使用<code>unzip -O GBK *.zip</code>或者<code>unzip -O CP936 *.zip</code>来指定编码格式。</p><ol><li><p>ZIP 压缩和解压：<br>压缩文件：zip compressed.zip file1.txt file2.txt folder&#x2F;<br>解压文件：unzip compressed.zip -d destination_folder&#x2F;</p></li><li><p><strong>7z 压缩和解压：</strong><br>压缩文件：7z a compressed.7z file1.txt file2.txt folder&#x2F;<br>解压文件：7z x compressed.7z -odestination_folder&#x2F;</p></li><li><p>GZIP<br>常用于对单个文件进行压缩，生成 .gz 后缀的压缩文件。</p></li></ol><p>压缩文件：gzip file.txt<br>解压文件：gzip -d file.txt.gz</p><ol start="4"><li>TAR<br>常用于将多个文件或目录打包成单个文件，生成 .tar 后缀的打包文件。通常结合其他压缩算法如 GZIP 或 BZIP2 来进行压缩，生成 .tar.gz 或 .tar.bz2 文件。</li></ol><p>压缩文件（使用 GZIP）：tar -cvzf archive.tar.gz file1.txt file2.txt folder&#x2F;<br>解压文件（使用 GZIP）：tar -xvzf archive.tar.gz -C destination_folder&#x2F;</p><ol start="5"><li>BZIP2<br>类似于 GZIP，但使用 BZIP2 压缩算法生成更高压缩比的压缩文件。生成 .bz2 后缀的压缩文件。</li></ol><p>压缩文件：bzip2 file.txt<br>解压文件：bzip2 -d file.txt.bz2</p><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p><img src="/./images/archlinux/code.png" alt="code"></p><p>从软件商店里下载的 code 有些插件并不提供，建议<code>yay -S visual-studio-code-bin</code>安装。</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="vimrc"><a href="#vimrc" class="headerlink" title="~&#x2F;.vimrc"></a>~&#x2F;.vimrc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"><span class="built_in">set</span> backspace=indent,eol,start</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"><span class="built_in">set</span> cindent</span><br><span class="line"><span class="built_in">set</span> mouse=n <span class="string">&quot;可视模式下使用鼠标，set mouse=a这个命令导致在vim下复制粘贴不好用</span></span><br><span class="line"><span class="string">set cinoptions=g-1</span></span><br><span class="line"><span class="string">set nobackup</span></span><br><span class="line"><span class="string">set number</span></span><br><span class="line"><span class="string">set history=100 &quot;</span>默认为20</span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"><span class="built_in">set</span> ignorecase <span class="string">&quot;设置默认大小写不敏感查找</span></span><br><span class="line"><span class="string">set showcmd &quot;</span>实时显示状态栏中命令</span><br><span class="line"><span class="built_in">set</span> ai <span class="string">&quot;vim中复制粘贴保存格式</span></span><br><span class="line"><span class="string">set incsearch &quot;</span>无需等按回车即可看到匹配结果</span><br><span class="line"><span class="built_in">set</span> cursorline</span><br><span class="line"><span class="built_in">set</span> encoding=utf-8</span><br><span class="line"><span class="built_in">set</span> langmenu=zh_CN.gb2312</span><br><span class="line"><span class="built_in">set</span> clipboard=unnamed</span><br><span class="line"><span class="built_in">set</span> fileencoding=gbk2312</span><br><span class="line"><span class="built_in">set</span> ts=4 <span class="string">&quot;设置Tab宽为4</span></span><br><span class="line"><span class="string">set sw=4</span></span><br><span class="line"><span class="string">set smartindent</span></span><br><span class="line"><span class="string">set showmatch &quot;</span>启用匹配括号高亮</span><br><span class="line"><span class="built_in">set</span> guioptions-=T <span class="string">&quot;GUI中移除工具条</span></span><br><span class="line"><span class="string">set expandtab &quot;</span>空格替代制表符</span><br><span class="line"><span class="built_in">set</span> noswapfile <span class="string">&quot; 不产生.swp文件</span></span><br><span class="line"><span class="string">set linebreak</span></span><br><span class="line"><span class="string">let g:ackhighlight = 1</span></span><br><span class="line"><span class="string">let g:ack_qhandler = &quot;</span>botright copen 15<span class="string">&quot;</span></span><br><span class="line"><span class="string">let curpwd = getcwd() &quot;</span>将当前工作目录存储在变量curpwd中</span><br><span class="line"><span class="built_in">let</span> mapleader = <span class="string">&quot;;&quot;</span></span><br><span class="line"></span><br><span class="line">nmap &lt;Leader&gt;gt g&lt;C-]&gt;</span><br><span class="line">nmap &lt;Leader&gt;gr &lt;C-T&gt;</span><br><span class="line">nmap &lt;Leader&gt;u &lt;C-U&gt;</span><br><span class="line">nmap &lt;Leader&gt;d &lt;C-D&gt;</span><br><span class="line">nmap &lt;Leader&gt;wq :wq&lt;CR&gt;</span><br><span class="line">nmap &lt;Leader&gt;1 ^</span><br><span class="line">nmap &lt;Leader&gt;2 $</span><br><span class="line"></span><br><span class="line">nmap &lt;Leader&gt;a :A&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">nmap &lt;Leader&gt;j :bn&lt;CR&gt;</span><br><span class="line">nmap &lt;Leader&gt;k :bp&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 设置快捷键gs遍历各分割窗口。快捷键速记法：goto the next spilt window</span></span><br><span class="line"><span class="string">nnoremap &lt;Leader&gt;gg &lt;C-W&gt;&lt;C-W&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 向左</span><br><span class="line">nnoremap &lt;leader&gt;h &lt;C-W&gt;&lt;C-H&gt;</span><br><span class="line"><span class="string">&quot; 向右</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;l &lt;C-W&gt;&lt;C-L&gt;</span></span><br><span class="line"><span class="string">&quot;</span> 向上</span><br><span class="line">nnoremap &lt;Leader&gt;k &lt;C-W&gt;&lt;C-K&gt;</span><br><span class="line"><span class="string">&quot; 向下</span></span><br><span class="line"><span class="string">nnoremap &lt;Leader&gt;j &lt;C-W&gt;&lt;C-J&gt;</span></span><br><span class="line"><span class="string">&quot;</span> 去除高亮</span><br><span class="line"><span class="string">&quot;nmap &lt;Leader&gt;h :noh&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;</span> 打开文件</span><br><span class="line">nmap &lt;Leader&gt;e :e&lt;Space&gt;</span><br><span class="line"><span class="string">&quot; 不关闭文件推出</span></span><br><span class="line"><span class="string">nmap &lt;Leader&gt;z &lt;C-Z&gt;</span></span><br><span class="line"><span class="string">&quot;</span> 水平分隔</span><br><span class="line">nmap &lt;Leader&gt;s :Sex&lt;CR&gt;</span><br><span class="line"><span class="string">&quot; 竖直分隔</span></span><br><span class="line"><span class="string">nmap &lt;Leader&gt;v :Vex&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;</span> 全局替换</span><br><span class="line">nmap &lt;Leader&gt;r :%s/fileName-/fileName+/g</span><br><span class="line"><span class="string">&quot; align 表格对齐</span></span><br><span class="line"><span class="string">nmap &lt;Leader&gt;t :Tab /</span></span><br><span class="line"><span class="string">nmap&lt;leader&gt;tg :!ctags -R --fields=+aS --extra=+q&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">map &lt;Leader&gt;y &quot;</span>*y</span><br><span class="line"><span class="string">&quot;禁止自动改变当前Vim窗口的大小</span></span><br><span class="line"><span class="string">let Tlist_Inc_Winwidth=0</span></span><br><span class="line"><span class="string">&quot;</span>把方法列表放在屏幕的右侧</span><br><span class="line"><span class="built_in">let</span> Tlist_Use_Right_Window=1</span><br><span class="line"><span class="string">&quot;让当前不被编辑的文件的方法列表自动折叠起来</span></span><br><span class="line"><span class="string">let Tlist_File_Fold_Auto_Close=1 </span></span><br><span class="line"><span class="string">filetype on</span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string">filetype indent on</span></span><br><span class="line"><span class="string">let g:SuperTabRetainCompletionType=2</span></span><br><span class="line"><span class="string">let g:SuperTabDefaultCompletionType=&quot;</span>&lt;C-X&gt;&lt;C-O&gt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">set cscopequickfix=s-,c-,d-,i-,t-,e-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set nofen</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let cwd=&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">set tags=tags</span></span><br><span class="line"><span class="string">let g:miniBufExplMapWindowNavArrows = 1</span></span><br><span class="line"><span class="string">&quot;</span>允许光标在任何位置时用CTRL-TAB遍历buffer</span><br><span class="line"><span class="built_in">let</span> g:miniBufExplMapCTabSwitchBufs = 1</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;设置winmanager窗口宽度</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">let</span> g:winManagerWidth = 30 </span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 重新打开文档时光标回到文档关闭前的位置</span></span><br><span class="line"><span class="string">if has(&quot;</span>autocmd<span class="string">&quot;)</span></span><br><span class="line"><span class="string"> autocmd BufReadPost *</span></span><br><span class="line"><span class="string"> \ if line(&quot;</span><span class="string">&#x27;\&quot;&quot;) &gt; 0 &amp;&amp; line (&quot;&#x27;</span>\&quot;<span class="string">&quot;) &lt;= line(&quot;</span>$<span class="string">&quot;) |</span></span><br><span class="line"><span class="string"> \ exe &quot;</span>normal g<span class="string">&#x27;\&quot;&quot; |</span></span><br><span class="line"><span class="string">\ endif</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;花括号自动格式化，首行一个tab</span></span><br><span class="line"><span class="string">autocmd FileType cpp,java inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;kA&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set fenc=&quot; &quot;</span></span><br><span class="line"><span class="string">&quot;显示匹配</span></span><br><span class="line"><span class="string">set showmatch</span></span><br><span class="line"><span class="string">&quot;括号匹配</span></span><br><span class="line"><span class="string">inoremap ( ()&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap [ []&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap &#x27;</span> <span class="string">&#x27;&#x27;</span>&lt;ESC&gt;i</span><br><span class="line">inoremap <span class="string">&quot; &quot;</span><span class="string">&quot;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">set selectmode=mouse,key</span></span><br><span class="line"><span class="string">set selection=exclusive</span></span><br><span class="line"><span class="string">set tags=tags;/ &quot;</span>告诉在每个目录下如果找不到tags就到上一层目录去找</span><br><span class="line"><span class="built_in">set</span> fileencoding=utf-8</span><br><span class="line"><span class="built_in">set</span> fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1</span><br><span class="line"></span><br><span class="line">autocmd InsertEnter * se cul    <span class="string">&quot; 用浅色高亮当前行&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; vim-commentary style set 注释针对不同语言的注释方法</span></span><br><span class="line"><span class="string">autocmd FileType cpp set commentstring=//\ %s</span></span><br><span class="line"><span class="string">autocmd FileType php set commentstring=//\ %s</span></span><br><span class="line"><span class="string">&quot;</span> <span class="built_in">set</span> modeline</span><br><span class="line"><span class="built_in">set</span> modeline</span><br><span class="line"><span class="string">&quot; 搜索关键词高亮</span></span><br><span class="line"><span class="string">set hlsearch</span></span><br><span class="line"><span class="string">&quot;</span> 开启语义分析</span><br><span class="line">syntax <span class="built_in">enable</span></span><br><span class="line">syntax on</span><br><span class="line"><span class="string">&quot; 使用ctrlc, v就可以实现vim之间的复制粘贴</span></span><br><span class="line"><span class="string">vnoremap &lt;C-c&gt; :w! ~/tmp/clipboard.txt &lt;CR&gt;</span></span><br><span class="line"><span class="string">inoremap &lt;C-v&gt; &lt;Esc&gt;:r ~/tmp/clipboard.txt &lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;</span> 编译快捷键</span><br><span class="line">autocmd filetype python nnoremap &lt;F1&gt; :w &lt;bar&gt; <span class="built_in">exec</span> <span class="string">&#x27;!python &#x27;</span>.shellescape(<span class="string">&#x27;%&#x27;</span>)&lt;CR&gt; autocmd filetype c nnoremap &lt;F1&gt; :w &lt;bar&gt; <span class="built_in">exec</span> <span class="string">&#x27;!gcc &#x27;</span>.shellescape(<span class="string">&#x27;%&#x27;</span>).<span class="string">&#x27; -o &#x27;</span>.shellescape(<span class="string">&#x27;%:r&#x27;</span>).<span class="string">&#x27; &amp;&amp; ./&#x27;</span>.shellescape(<span class="string">&#x27;%:r&#x27;</span>)&lt;CR&gt;</span><br><span class="line">autocmd filetype cpp nnoremap &lt;F1&gt; :w &lt;bar&gt; <span class="built_in">exec</span> <span class="string">&#x27;!g++ --std=c++11 -pthread &#x27;</span>.shellescape(<span class="string">&#x27;%&#x27;</span>).<span class="string">&#x27; -o ./bin/&#x27;</span>.shellescape(<span class="string">&#x27;%:r&#x27;</span>).<span class="string">&#x27; &amp;&amp; ./bin/&#x27;</span>.shellescape(<span class="string">&#x27;%:r&#x27;</span>)&lt;CR&gt;</span><br><span class="line"><span class="string">&quot; autocmd filetype dot nnoremap &lt;F1&gt; :w &lt;bar&gt; exec &#x27;!dot -Tsvg &#x27;.shellescape(&#x27;%&#x27;).&#x27; &gt; ./svg/&#x27;.shellescape(&#x27;%:r&#x27;).&#x27; &amp;&amp; open ./bin/&#x27;.shellescape(&#x27;%:r&#x27;)&lt;CR&gt;</span></span><br><span class="line"><span class="string">autocmd filetype dot nnoremap &lt;F1&gt; :w &lt;bar&gt; exec &#x27;!dot -Tsvg sqlparse.dot &gt; sqlparse.svg&#x27;&lt;CR&gt;</span></span><br><span class="line"><span class="string">autocmd Filetype java nnoremap &lt;F1&gt; :w &lt;bar&gt; exec &#x27;!javac &#x27;.shellescape(&#x27;%&#x27;). &#x27; -d ./bin&#x27;&lt;CR&gt;</span></span><br><span class="line"><span class="string">autocmd filetype java nnoremap &lt;F2&gt; :w &lt;bar&gt; exec &#x27;!java -cp ./bin &#x27;.shellescape(&#x27;%:r&#x27;)&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let g:tlist_markdown_settings = &#x27;markdown;h:Headlins&#x27;</span></span><br><span class="line"><span class="string">&quot;</span>新建.c,.h,.sh,.Java文件，自动插入文件头</span><br><span class="line">autocmd BufNewFile *.cpp,*.[ch],*.sh,*.Java,*.go <span class="built_in">exec</span> <span class="string">&quot;:call SetTitle()&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; shortcut for markdown</span></span><br><span class="line"><span class="string">&quot;</span> 创建时间快捷键<span class="keyword">for</span> markdown</span><br><span class="line">nmap tm :call SetTime() &lt;CR&gt;</span><br><span class="line">func SetTime()</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;\# &quot;</span>.strftime(<span class="string">&#x27;%a %d %b %Y&#x27;</span>))</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">nmap tb :call SetTable() &lt;CR&gt;</span><br><span class="line">func SetTable()</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;\| | | &quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;\|---|---|&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;\| | |&quot;</span>)</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">nmap pc :call SetPic() &lt;CR&gt;</span><br><span class="line">func SetPic()</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;\&lt;img src=&#x27;&#x27; width=600 alt=&#x27;&#x27;&gt; &lt;/img&gt;&lt;/div&gt;&quot;</span>)</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">nmap pi :call SetPic1() &lt;CR&gt;</span><br><span class="line">func SetPic1()</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;\![]()&quot;</span>)</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">nmap vi :call SetVideo() &lt;CR&gt;</span><br><span class="line">func SetVideo()</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;\&lt;video src=&#x27;1.mp4&#x27; controls=&#x27;controls&#x27; width=&#x27;640&#x27; height=&#x27;320&#x27; autoplay=&#x27;autoplay&#x27;&gt; Your browser does not support the video tag.&lt;/video&gt;&lt;/div&gt;&quot;</span>)</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">nmap cl :call SetCollor() &lt;CR&gt;</span><br><span class="line">func SetCollor()</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;&lt;span  style=&#x27;color: #f16707;&#x27;&gt; &lt;/span&gt;&quot;</span>)</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; vim cc</span></span><br><span class="line"><span class="string">nmap cc :call SetCC() &lt;CR&gt;</span></span><br><span class="line"><span class="string">func SetCC() </span></span><br><span class="line"><span class="string">    call append(line(&quot;</span>.<span class="string">&quot;), &quot;</span>// vim: et tw=100 ts=4 sw=4 cc=120<span class="string">&quot;)  </span></span><br><span class="line"><span class="string">endfunc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 使用的背景主题</span><br><span class="line"><span class="string">&quot; colorscheme Monokai_Gavin</span></span><br><span class="line"><span class="string">colorscheme molokai</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> <span class="keyword">for</span> vim-syntastic </span><br><span class="line"><span class="string">&quot; disabled Syntastic by default </span></span><br><span class="line"><span class="string">let g:syntastic_mode_map = &#123; &#x27;mode&#x27;: &#x27;passive&#x27;, &#x27;active_filetypes&#x27;: [],&#x27;passive_filetypes&#x27;: [] &#125;</span></span><br><span class="line"><span class="string">&quot;</span> open/close Syntastic checker</span><br><span class="line">nnoremap &lt;Leader&gt;p :SyntasticToggleMode&lt;CR&gt; :w&lt;CR&gt;</span><br><span class="line"><span class="string">&quot; set vim-syntastic compiler </span></span><br><span class="line"><span class="string">let g:syntastic_cpp_compiler = &#x27;g++&#x27;</span></span><br><span class="line"><span class="string">let g:syntastic_cpp_compiler_options = &#x27; -std=c++11 -stdlib=libc++&#x27;</span></span><br><span class="line"><span class="string">set statusline+=%#warningmsg#</span></span><br><span class="line"><span class="string">set statusline+=%&#123;SyntasticStatuslineFlag()&#125;</span></span><br><span class="line"><span class="string">set statusline+=%*</span></span><br><span class="line"><span class="string">let g:syntastic_always_populate_loc_list = 1</span></span><br><span class="line"><span class="string">let g:syntastic_auto_loc_list = 1</span></span><br><span class="line"><span class="string">let g:syntastic_check_on_open = 1</span></span><br><span class="line"><span class="string">let g:syntastic_check_on_wq = 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> <span class="built_in">test</span></span><br><span class="line"><span class="string">&quot; set autochdir</span></span><br><span class="line"><span class="string">autocmd BufEnter * silent! lcd %:p:h</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> complete with no first suggestion </span><br><span class="line"><span class="string">&quot; :set completeopt+=noinsert</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set completeopt=menu,menuone  </span></span><br><span class="line"><span class="string">let OmniCpp_MayCompleteDot=1    &quot;</span>  打开  . 操作符</span><br><span class="line"><span class="built_in">let</span> OmniCpp_MayCompleteArrow=1  <span class="string">&quot; 打开 -&gt; 操作符</span></span><br><span class="line"><span class="string">let OmniCpp_MayCompleteScope=1  &quot;</span> 打开 :: 操作符</span><br><span class="line"><span class="built_in">let</span> OmniCpp_NamespaceSearch=1   <span class="string">&quot; 打开命名空间</span></span><br><span class="line"><span class="string">let OmniCpp_GlobalScopeSearch=1  </span></span><br><span class="line"><span class="string">let OmniCpp_DefaultNamespace=[&quot;</span>std<span class="string">&quot;]  </span></span><br><span class="line"><span class="string">let OmniCpp_ShowPrototypeInAbbr=1  &quot;</span> 打开显示函数原型</span><br><span class="line"><span class="built_in">let</span> OmniCpp_SelectFirstItem = 2 <span class="string">&quot; 自动弹出时自动跳至第一个</span></span><br><span class="line"><span class="string">autocmd BufRead scp://* :set bt=acwrite</span></span><br><span class="line"><span class="string">&quot;</span> au FileType * setlocal dict+=~/.vim/dictionary/words.txt</span><br><span class="line">autocmd FileType java setlocal omnifunc=javacomplete#Complete</span><br><span class="line"><span class="built_in">let</span> g:JavaComplete_JavaCompiler=<span class="string">&quot;/Library/Java/JavaVirtualMachines/jdk-10.0.2.jdk/Contents/Home/bin/javac&quot;</span></span><br><span class="line"><span class="string">&quot; for JavaComplete</span></span><br><span class="line"><span class="string">nmap &lt;F4&gt; &lt;Plug&gt;(JavaComplete-Imports-AddSmart)</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;js &lt;Plug&gt;(JavaComplete-Generate-AccessorSetter)</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;jg &lt;Plug&gt;(JavaComplete-Generate-AccessorGetter)</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;ja &lt;Plug&gt;(JavaComplete-Generate-AccessorSetterGetter)</span></span><br><span class="line"><span class="string">nmap &lt;Leader&gt;o o&lt;Esc&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:set syntax=markdown</span></span><br><span class="line"><span class="string">au BufNewFile,BufFilePre,BufRead *.md set filetype=markdown</span></span><br><span class="line"><span class="string">&quot;</span> au BufNewFile,BufFilePre,BufRead *.md <span class="built_in">set</span> filetype=markdown </span><br><span class="line"><span class="string">&quot; for me</span></span><br><span class="line"><span class="string">func MarkdownSet() </span></span><br><span class="line"><span class="string">    let filePath=expand(&#x27;%:p&#x27;)</span></span><br><span class="line"><span class="string">    exe &#x27;:!open &#x27; . filePath &#x27;-a &quot;</span>MacDown<span class="string">&quot;&#x27;</span></span><br><span class="line"><span class="string">endfunc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> usage :call GenMarkdownSectionNum    给markdown 文件生成目录编号</span><br><span class="line"><span class="keyword">function</span>! GenMarkdownSectionNum()</span><br><span class="line">  <span class="keyword">if</span> &amp;ft != <span class="string">&quot;markdown&quot;</span></span><br><span class="line">    echohl Error</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;filetype is not markdown&quot;</span></span><br><span class="line">    echohl None</span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">  endif</span><br><span class="line"></span><br><span class="line">  <span class="built_in">let</span> lvl = []</span><br><span class="line">  <span class="built_in">let</span> sect = []</span><br><span class="line">  <span class="built_in">let</span> out = <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(1, line(<span class="string">&#x27;$&#x27;</span>), 1)</span><br><span class="line">    <span class="built_in">let</span> line = getline(i)</span><br><span class="line">    <span class="built_in">let</span> heading_lvl = strlen(substitute(line, <span class="string">&#x27;^\(#*\).*&#x27;</span>, <span class="string">&#x27;\1&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> heading_lvl &lt; 2</span><br><span class="line">      <span class="built_in">continue</span></span><br><span class="line">    endif</span><br><span class="line">    <span class="string">&quot; there should be only 1 H1, topmost, on a conventional web page</span></span><br><span class="line"><span class="string">    &quot;</span> we should generate section numbers begin with the first heading level 2</span><br><span class="line">    <span class="keyword">if</span> len(lvl) == 0</span><br><span class="line">      <span class="keyword">if</span> heading_lvl != 2 <span class="string">&quot; count from level 2</span></span><br><span class="line"><span class="string">        echohl Error</span></span><br><span class="line"><span class="string">        echo &quot;</span>subsection must have parent section, ignore illegal heading line at line <span class="string">&quot; . i</span></span><br><span class="line"><span class="string">        echohl None</span></span><br><span class="line"><span class="string">        continue</span></span><br><span class="line"><span class="string">      endif</span></span><br><span class="line"><span class="string">      call add(sect, 1)</span></span><br><span class="line"><span class="string">      call add(lvl, heading_lvl)</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">      if lvl[-1] == heading_lvl</span></span><br><span class="line"><span class="string">        let sect[-1] = sect[-1] + 1</span></span><br><span class="line"><span class="string">      elseif lvl[-1] &gt; heading_lvl &quot;</span> pop all lvl less than heading_lvl from <span class="built_in">tail</span></span><br><span class="line">        <span class="keyword">while</span> len(lvl) != 0 &amp;&amp; lvl[-1] &gt; heading_lvl</span><br><span class="line">          call remove(lvl, -1)</span><br><span class="line">          call remove(sect, -1)</span><br><span class="line">        endwhile</span><br><span class="line">        <span class="built_in">let</span> sect[-1] = sect[-1] + 1</span><br><span class="line">      elseif lvl[-1] &lt; heading_lvl</span><br><span class="line">        <span class="keyword">if</span> heading_lvl - lvl[-1] != 1</span><br><span class="line">          echohl Error</span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;subsection must have parent section, ignore illegal heading line at line &quot;</span> . i</span><br><span class="line">          echohl None</span><br><span class="line">          <span class="built_in">continue</span></span><br><span class="line">        endif</span><br><span class="line">        call add(sect, 1)</span><br><span class="line">        call add(lvl, heading_lvl)</span><br><span class="line">      endif</span><br><span class="line">    endif</span><br><span class="line"></span><br><span class="line">    <span class="built_in">let</span> cur_sect = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> sect</span><br><span class="line">      <span class="built_in">let</span> cur_sect = cur_sect . <span class="string">&quot;.&quot;</span> . j</span><br><span class="line">    endfor</span><br><span class="line">    <span class="built_in">let</span> cur_sect = cur_sect[1:]</span><br><span class="line">    <span class="built_in">let</span> out = out . <span class="string">&quot; &quot;</span> . cur_sect</span><br><span class="line">    call setline(i, substitute(line, <span class="string">&#x27;^\(#\+\) \?\([0-9.]\+ \)\? *\(.*\)&#x27;</span>, <span class="string">&#x27;\1 &#x27;</span> . cur_sect . <span class="string">&#x27; \3&#x27;</span>, line))</span><br><span class="line">  endfor</span><br><span class="line">  <span class="string">&quot; echo lvl sect out</span></span><br><span class="line"><span class="string">  echo out</span></span><br><span class="line"><span class="string">endfunc</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="zshrc"><a href="#zshrc" class="headerlink" title="~&#x2F;.zshrc"></a>~&#x2F;.zshrc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ZSH_WAKATIME_PROJECT_DETECTION=<span class="literal">true</span></span><br><span class="line"><span class="built_in">export</span> VCPKG_ROOT=~/Applications/vcpkg</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$VCPKG_ROOT</span>:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -r <span class="string">&quot;<span class="variable">$&#123;XDG_CACHE_HOME:-<span class="variable">$HOME</span>/.cache&#125;</span>/p10k-instant-prompt-<span class="variable">$&#123;(%):-%n&#125;</span>.zsh&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">source</span> <span class="string">&quot;<span class="variable">$&#123;XDG_CACHE_HOME:-<span class="variable">$HOME</span>/.cache&#125;</span>/p10k-instant-prompt-<span class="variable">$&#123;(%):-%n&#125;</span>.zsh&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># auto start tmux</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$TMUX</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    tmux attach -t master || tmux new -s master</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># If you come from bash you might have to change your $PATH.</span></span><br><span class="line"><span class="comment"># export PATH=$HOME/bin:/usr/local/bin:$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to your oh-my-zsh installation.</span></span><br><span class="line">ZSH=/usr/share/oh-my-zsh/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class="line"><span class="comment"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class="line"><span class="comment"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class="line"><span class="comment"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class="line"><span class="comment"># ZSH_THEME=&quot;intheloop&quot;</span></span><br><span class="line"><span class="comment"># ZSH_THEME=&quot;refined&quot;</span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;fox&quot;</span></span><br><span class="line"><span class="comment"># ZSH_THEME=&quot;rkj-repos&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> zshc=<span class="string">&quot;vim ~/.zshrc &amp;&amp; source ~/.zshrc&quot;</span></span><br><span class="line"><span class="built_in">alias</span> omzc=<span class="string">&quot;vim ~/.oh-my-zsh &amp;&amp; source ~/.zshrc&quot;</span></span><br><span class="line"><span class="built_in">alias</span> vimc=<span class="string">&quot;vim ~/.vimrc &amp;&amp; source ~/.vimrc&quot;</span></span><br><span class="line"><span class="built_in">alias</span> tmuxc=<span class="string">&quot;vim ~/.tmux.conf &amp;&amp; source ~/.tmux.conf&quot;</span></span><br><span class="line"><span class="built_in">alias</span> conda_env=<span class="string">&quot;source /opt/anaconda/bin/activate&quot;</span></span><br><span class="line"><span class="built_in">alias</span> vi=<span class="string">&quot;/usr/bin/nvim&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> zat=<span class="string">&quot;zathura&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ffp=<span class="string">&quot;ffplay&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ffetch=<span class="string">&quot;fastfetch&quot;</span></span><br><span class="line"><span class="built_in">alias</span> remake=<span class="string">&quot;rm -rf build &amp;&amp; cmake -B build &amp;&amp; cmake --build build&quot;</span></span><br><span class="line"><span class="built_in">alias</span> rebuild=<span class="string">&quot;cmake --build build&quot;</span></span><br><span class="line"><span class="built_in">alias</span> yz=<span class="string">&quot;yazi&quot;</span></span><br><span class="line"><span class="built_in">alias</span> vd=<span class="string">&quot;(neovide&amp;)&amp;&quot;</span></span><br><span class="line"><span class="built_in">alias</span> lg=<span class="string">&quot;lazygit&quot;</span></span><br><span class="line"><span class="built_in">alias</span> cls=<span class="string">&quot;clear&quot;</span></span><br><span class="line"><span class="built_in">alias</span> cl=<span class="string">&quot;clear&quot;</span></span><br><span class="line"><span class="built_in">alias</span> sl=<span class="string">&quot;ls&quot;</span></span><br><span class="line"><span class="built_in">alias</span> lls=<span class="string">&quot;ls&quot;</span></span><br><span class="line"><span class="built_in">alias</span> tmxu=<span class="string">&quot;tmux&quot;</span></span><br><span class="line"><span class="built_in">alias</span> docker-start=<span class="string">&quot;sudo systemctl start docker.socket&quot;</span></span><br><span class="line"><span class="built_in">alias</span> docker-stop=<span class="string">&quot;sudo systemctl stop docker.socket&quot;</span></span><br><span class="line"><span class="built_in">alias</span> qs=<span class="string">&quot;pacman -Qs&quot;</span></span><br><span class="line"><span class="built_in">alias</span> get=<span class="string">&quot;sudo pacman -S&quot;</span></span><br><span class="line"><span class="built_in">alias</span> un=<span class="string">&quot;sudo pacman -R&quot;</span></span><br><span class="line"><span class="built_in">alias</span> syu=<span class="string">&quot;sudo pacman -Syu&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ss=<span class="string">&quot;pacman -Ss&quot;</span></span><br><span class="line"><span class="built_in">alias</span> docker=<span class="string">&quot;sudo docker&quot;</span></span><br><span class="line"><span class="built_in">alias</span> hexo_=<span class="string">&quot;npx hexo clean &amp;&amp; npx hexo generate &amp;&amp; npx hexo server&quot;</span></span><br><span class="line"><span class="built_in">alias</span> hexo_d=<span class="string">&quot;npx hexo deploy&quot;</span></span><br><span class="line"><span class="built_in">alias</span> blog=<span class="string">&quot;cd ~/Applications/blog&quot;</span></span><br><span class="line"><span class="built_in">alias</span> vsc=<span class="string">&quot;cd ~/Applications/vscode&quot;</span></span><br><span class="line"><span class="built_in">alias</span> dmesg=<span class="string">&quot;sudo dmesg&quot;</span></span><br><span class="line"><span class="built_in">alias</span> q=<span class="string">&quot;exit&quot;</span></span><br><span class="line"><span class="built_in">alias</span> kills=<span class="string">&quot;tmux kill-session -t&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ql=<span class="string">&quot;pacman -Ql&quot;</span></span><br><span class="line"><span class="built_in">alias</span> del=<span class="string">&quot;rm -rf&quot;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&quot;mv -i&quot;</span></span><br><span class="line"><span class="built_in">alias</span> c=<span class="string">&quot;cd&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ap=<span class="string">&quot;cd ~/Applications &amp;&amp; ls&quot;</span></span><br><span class="line"><span class="built_in">alias</span> his=<span class="string">&quot;history&quot;</span></span><br><span class="line"><span class="built_in">alias</span> down=<span class="string">&quot;cd ~/Downloads&quot;</span></span><br><span class="line"><span class="built_in">alias</span> github=<span class="string">&quot;cd ~/Applications/vscode/github&quot;</span></span><br><span class="line"><span class="built_in">alias</span> cmk=<span class="string">&quot;touch CMakeLists.txt&quot;</span></span><br><span class="line"><span class="built_in">alias</span> make_llvm=<span class="string">&#x27;cmake -DLLVM_ENABLE_PROJECTS=&quot;clang;lld;llvm&quot; -DCMAKE_BUILD_TYPE=Debug -G &quot;Unix Makefiles&quot; ../llvm&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> act=<span class="string">&quot;conda activate&quot;</span></span><br><span class="line"><span class="built_in">alias</span> qqmusic=<span class="string">&quot;cd ~/Applications/vscode/github/qqmusic&quot;</span></span><br><span class="line"></span><br><span class="line">ZSH_CACHE_DIR=<span class="variable">$HOME</span>/.cache/oh-my-zsh</span><br><span class="line"><span class="keyword">if</span> [[ ! -d <span class="variable">$ZSH_CACHE_DIR</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">mkdir</span> <span class="variable">$ZSH_CACHE_DIR</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">plugins=(</span><br><span class="line">    git</span><br><span class="line">    autojump</span><br><span class="line">    zsh-syntax-highlighting</span><br><span class="line">    zsh-wakatime</span><br><span class="line">)</span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</span><br><span class="line"><span class="comment">#vi mode</span></span><br><span class="line"><span class="built_in">bindkey</span> -v</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> zle-keymap-select &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;KEYMAP&#125;</span> == vicmd ]] || [[ <span class="variable">$1</span> = <span class="string">&#x27;block&#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&#x27;\e[2 q&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="variable">$&#123;KEYMAP&#125;</span> == main ]] || [[ <span class="variable">$&#123;KEYMAP&#125;</span> == viins ]] || [[ <span class="variable">$&#123;KEYMAP&#125;</span> == <span class="string">&#x27;&#x27;</span> ]] || [[ <span class="variable">$1</span> == <span class="string">&#x27;block&#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&#x27;\e[6 q&#x27;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> zle-line-init zle-keymap-select &#123;</span><br><span class="line">    RPS1=<span class="string">&quot;<span class="variable">$&#123;<span class="variable">$&#123;KEYMAP/vicmd/-- NORMAL --&#125;</span>/(main|viins)/-- INSERT --&#125;</span>&quot;</span></span><br><span class="line">    RPS2=<span class="variable">$RPS1</span></span><br><span class="line">    <span class="built_in">zle</span> reset-prompt</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">zle</span> -N zle-line-init</span><br><span class="line"><span class="built_in">zle</span> -N zle-keymap-select</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /home/poem/.config/broot/launcher/bash/br</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="etc-pacman-conf"><a href="#etc-pacman-conf" class="headerlink" title="&#x2F;etc&#x2F;pacman.conf"></a>&#x2F;etc&#x2F;pacman.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/pacman.conf</span></span><br><span class="line">[options]</span><br><span class="line"><span class="comment"># The following paths are commented out with their default values listed.</span></span><br><span class="line"><span class="comment"># If you wish to use different paths, uncomment and update the paths.</span></span><br><span class="line"><span class="comment">#RootDir     = /</span></span><br><span class="line"><span class="comment">#DBPath      = /var/lib/pacman/</span></span><br><span class="line"><span class="comment">#CacheDir    = /var/cache/pacman/pkg/</span></span><br><span class="line"><span class="comment">#LogFile     = /var/log/pacman.log</span></span><br><span class="line"><span class="comment">#GPGDir      = /etc/pacman.d/gnupg/</span></span><br><span class="line"><span class="comment">#HookDir     = /etc/pacman.d/hooks/</span></span><br><span class="line">HoldPkg     = pacman glibc</span><br><span class="line"><span class="comment">#XferCommand = /usr/bin/curl -L -C - -f -o %o %u</span></span><br><span class="line"><span class="comment">#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u</span></span><br><span class="line"><span class="comment">#CleanMethod = KeepInstalled</span></span><br><span class="line">Architecture = auto</span><br><span class="line"></span><br><span class="line">Color</span><br><span class="line">CheckSpace</span><br><span class="line"></span><br><span class="line">SigLevel    = Required DatabaseOptional</span><br><span class="line">LocalFileSigLevel = Optional</span><br><span class="line"><span class="comment">#RemoteFileSigLevel = Required</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># NOTE: You must run `pacman-key --init` before first using pacman; the local</span></span><br><span class="line"><span class="comment"># keyring can then be populated with the keys of all official Arch Linux</span></span><br><span class="line"><span class="comment"># packagers with `pacman-key --populate archlinux`.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># REPOSITORIES</span></span><br><span class="line"><span class="comment">#   - can be defined here or included from another file</span></span><br><span class="line"><span class="comment">#   - pacman will search repositories in the order defined here</span></span><br><span class="line"><span class="comment">#   - local/custom mirrors can be added here or in separate files</span></span><br><span class="line"><span class="comment">#   - repositories listed first will take precedence when packages</span></span><br><span class="line"><span class="comment">#     have identical names, regardless of version number</span></span><br><span class="line"><span class="comment">#   - URLs will have $repo replaced by the name of the current repo</span></span><br><span class="line"><span class="comment">#   - URLs will have $arch replaced by the name of the architecture</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Repository entries are of the format:</span></span><br><span class="line"><span class="comment">#       [repo-name]</span></span><br><span class="line"><span class="comment">#       Server = ServerName</span></span><br><span class="line"><span class="comment">#       Include = IncludePath</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The header [repo-name] is crucial - it must be present and</span></span><br><span class="line"><span class="comment"># uncommented to enable the repo.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The testing repositories are disabled by default. To enable, uncomment the</span></span><br><span class="line"><span class="comment"># repo name header and Include lines. You can add preferred servers immediately</span></span><br><span class="line"><span class="comment"># after the header, and they will be used before the default mirrors.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[core-testing]</span></span><br><span class="line"><span class="comment">#Include = /etc/pacman.d/mirrorlist</span></span><br><span class="line"></span><br><span class="line">[core]</span><br><span class="line">Include = /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line"><span class="comment">#[extra-testing]</span></span><br><span class="line"><span class="comment">#Include = /etc/pacman.d/mirrorlist</span></span><br><span class="line"></span><br><span class="line">[extra]</span><br><span class="line">Include = /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line"><span class="comment"># If you want to run 32 bit applications on your x86_64 system,</span></span><br><span class="line"><span class="comment"># enable the multilib repositories as required here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[multilib-testing]</span></span><br><span class="line">Include = /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line">[multilib]</span><br><span class="line">Include = /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line"><span class="comment"># An example of a custom package repository.  See the pacman manpage for</span></span><br><span class="line"><span class="comment"># tips on creating your own repositories.</span></span><br><span class="line"><span class="comment">#[custom]</span></span><br><span class="line"><span class="comment">#SigLevel = Optional TrustAll</span></span><br><span class="line"><span class="comment">#Server = file:///home/custompkgs</span></span><br><span class="line"></span><br><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line">Server = https://mirrors.hit.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line">Server = https://repo.huaweicloud.com/archlilnuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><h3 id="tmux-conf"><a href="#tmux-conf" class="headerlink" title="~&#x2F;.tmux.conf"></a>~&#x2F;.tmux.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- general -------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g default-terminal <span class="string">&quot;screen-256color&quot;</span></span><br><span class="line"></span><br><span class="line">setw -g xterm-keys on</span><br><span class="line"><span class="built_in">set</span> -s escape-time 10                     <span class="comment"># faster command sequences</span></span><br><span class="line"><span class="built_in">set</span> -sg repeat-time 600                   <span class="comment"># increase repeat timeout</span></span><br><span class="line"><span class="built_in">set</span> -s focus-events on</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g prefix2 C-a                        <span class="comment"># GNU-Screen compatible prefix</span></span><br><span class="line"><span class="built_in">bind</span> C-a send-prefix -2</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -q -g status-utf8 on                  <span class="comment"># expect UTF-8 (tmux &lt; 2.2)</span></span><br><span class="line">setw -q -g utf8 on</span><br><span class="line"><span class="built_in">set</span> -g mouse on</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g history-limit 15000                 <span class="comment"># boost history</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># edit configuration</span></span><br><span class="line">%<span class="keyword">if</span> <span class="comment">#&#123;&gt;=:#&#123;version&#125;,3.0&#125;</span></span><br><span class="line"><span class="built_in">bind</span> e new-window -n <span class="string">&quot;#&#123;TMUX_CONF_LOCAL&#125;&quot;</span> -e EDITOR=<span class="string">&quot;<span class="variable">$EDITOR</span>&quot;</span> sh -c <span class="string">&#x27;case &quot;$&#123;EDITOR:-vim&#125;&quot; in *vim*) $&#123;EDITOR:-vim&#125; -c &quot;:set syntax=tmux&quot; &quot;$TMUX_CONF_LOCAL&quot;;; *) $EDITOR &quot;$TMUX_CONF_LOCAL&quot;;; esac &amp;&amp; &quot;$TMUX_PROGRAM&quot; $&#123;TMUX_SOCKET:+-S &quot;$TMUX_SOCKET&quot;&#125; source &quot;$TMUX_CONF&quot; \; display &quot;$TMUX_CONF_LOCAL sourced&quot;&#x27;</span></span><br><span class="line">%<span class="keyword">else</span></span><br><span class="line">set-environment -g EDITOR <span class="string">&quot;<span class="variable">$EDITOR</span>&quot;</span></span><br><span class="line"><span class="built_in">bind</span> e new-window -n <span class="string">&quot;#&#123;TMUX_CONF_LOCAL&#125;&quot;</span> sh -c <span class="string">&#x27;case &quot;$&#123;EDITOR:-vim&#125;&quot; in *vim*) $&#123;EDITOR:-vim&#125; -c &quot;:set syntax=tmux&quot; &quot;$TMUX_CONF_LOCAL&quot;;; *) $EDITOR &quot;$TMUX_CONF_LOCAL&quot;;; esac &amp;&amp; &quot;$TMUX_PROGRAM&quot; $&#123;TMUX_SOCKET:+-S &quot;$TMUX_SOCKET&quot;&#125; source &quot;$TMUX_CONF&quot; \; display &quot;$TMUX_CONF_LOCAL sourced&quot;&#x27;</span></span><br><span class="line">%endif</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload configuration</span></span><br><span class="line"><span class="built_in">bind</span> r run <span class="string">&#x27;&quot;$TMUX_PROGRAM&quot; $&#123;TMUX_SOCKET:+-S &quot;$TMUX_SOCKET&quot;&#125; source &quot;$TMUX_CONF&quot;&#x27;</span> \; display <span class="string">&quot;#&#123;TMUX_CONF&#125; sourced&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- display -------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g base-index 1           <span class="comment"># start windows numbering at 1</span></span><br><span class="line">setw -g pane-base-index 1     <span class="comment"># make pane numbering consistent with windows</span></span><br><span class="line"></span><br><span class="line">setw -g automatic-rename on   <span class="comment"># rename window to reflect current program</span></span><br><span class="line"><span class="built_in">set</span> -g renumber-windows on    <span class="comment"># renumber windows when a window is closed</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g set-titles on          <span class="comment"># set terminal title</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g display-panes-time 800 <span class="comment"># slightly longer pane indicators display time</span></span><br><span class="line"><span class="built_in">set</span> -g display-time 1000      <span class="comment"># slightly longer status messages display time</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g status-interval 10     <span class="comment"># redraw status line every 10 seconds</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># clear both screen and history</span></span><br><span class="line"><span class="built_in">bind</span> -n C-l send-keys C-l \; run <span class="string">&#x27;sleep 0.2&#x27;</span> \; clear-history</span><br><span class="line"></span><br><span class="line"><span class="comment"># activity</span></span><br><span class="line"><span class="built_in">set</span> -g monitor-activity on</span><br><span class="line"><span class="built_in">set</span> -g visual-activity off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- navigation ----------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create session</span></span><br><span class="line"><span class="built_in">bind</span> C-c new-session</span><br><span class="line"></span><br><span class="line"><span class="comment"># find session</span></span><br><span class="line"><span class="built_in">bind</span> C-f command-prompt -p find-session <span class="string">&#x27;switch-client -t %%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># session navigation</span></span><br><span class="line"><span class="built_in">bind</span> BTab switch-client -l  <span class="comment"># move to last session</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># split current window horizontally</span></span><br><span class="line"><span class="built_in">bind</span> - split-window -v</span><br><span class="line"><span class="comment"># split current window vertically</span></span><br><span class="line"><span class="built_in">bind</span> _ split-window -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># pane navigation</span></span><br><span class="line"><span class="built_in">bind</span> -r h select-pane -L  <span class="comment"># move left</span></span><br><span class="line"><span class="built_in">bind</span> -r j select-pane -D  <span class="comment"># move down</span></span><br><span class="line"><span class="built_in">bind</span> -r k select-pane -U  <span class="comment"># move up</span></span><br><span class="line"><span class="built_in">bind</span> -r l select-pane -R  <span class="comment"># move right</span></span><br><span class="line"><span class="built_in">bind</span> &gt; swap-pane -D       <span class="comment"># swap current pane with the next one</span></span><br><span class="line"><span class="built_in">bind</span> &lt; swap-pane -U       <span class="comment"># swap current pane with the previous one</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># maximize current pane</span></span><br><span class="line"><span class="built_in">bind</span> + run <span class="string">&quot;cut -c3- &#x27;#&#123;TMUX_CONF&#125;&#x27; | sh -s _maximize_pane &#x27;#&#123;session_name&#125;&#x27; &#x27;#D&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pane resizing</span></span><br><span class="line"><span class="built_in">bind</span> -r H resize-pane -L 2</span><br><span class="line"><span class="built_in">bind</span> -r J resize-pane -D 2</span><br><span class="line"><span class="built_in">bind</span> -r K resize-pane -U 2</span><br><span class="line"><span class="built_in">bind</span> -r L resize-pane -R 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># window navigation</span></span><br><span class="line">unbind n</span><br><span class="line">unbind p</span><br><span class="line"><span class="built_in">bind</span> -r C-h previous-window <span class="comment"># select previous window</span></span><br><span class="line"><span class="built_in">bind</span> -r C-l next-window     <span class="comment"># select next window</span></span><br><span class="line"><span class="built_in">bind</span> Tab last-window        <span class="comment"># move to last active window</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># toggle mouse</span></span><br><span class="line"><span class="built_in">bind</span> m run <span class="string">&quot;cut -c3- &#x27;#&#123;TMUX_CONF&#125;&#x27; | sh -s _toggle_mouse&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- facebook pathpicker -------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bind</span> F run <span class="string">&quot;cut -c3- &#x27;#&#123;TMUX_CONF&#125;&#x27; | sh -s _fpp &#x27;#&#123;pane_id&#125;&#x27; &#x27;#&#123;pane_current_path&#125;&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- copy mode -----------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bind</span> Enter copy-mode <span class="comment"># enter copy mode</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi v send -X begin-selection</span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi C-v send -X rectangle-toggle</span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi y send -X copy-selection-and-cancel</span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi Escape send -X cancel</span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi H send -X start-of-line</span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi L send -X end-of-line</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy to X11 clipboard</span></span><br><span class="line"><span class="keyword">if</span> -b <span class="string">&#x27;command -v xsel &gt; /dev/null 2&gt;&amp;1&#x27;</span> <span class="string">&#x27;bind y run -b &quot;\&quot;\$TMUX_PROGRAM\&quot; \$&#123;TMUX_SOCKET:+-S \&quot;\$TMUX_SOCKET\&quot;&#125; save-buffer - | xsel -i -b&quot;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> -b <span class="string">&#x27;! command -v xsel &gt; /dev/null 2&gt;&amp;1 &amp;&amp; command -v xclip &gt; /dev/null 2&gt;&amp;1&#x27;</span> <span class="string">&#x27;bind y run -b &quot;\&quot;\$TMUX_PROGRAM\&quot; \$&#123;TMUX_SOCKET:+-S \&quot;\$TMUX_SOCKET\&quot;&#125; save-buffer - | xclip -i -selection clipboard &gt;/dev/null 2&gt;&amp;1&quot;&#x27;</span></span><br><span class="line"><span class="comment"># copy to Wayland clipboard</span></span><br><span class="line"><span class="keyword">if</span> -b <span class="string">&#x27;[ &quot;$XDG_SESSION_TYPE&quot; = &quot;wayland&quot; ] &amp;&amp; command -v wl-copy &gt; /dev/null 2&gt;&amp;1&#x27;</span> <span class="string">&#x27;bind y run -b &quot;\&quot;\$TMUX_PROGRAM\&quot; \$&#123;TMUX_SOCKET:+-S \&quot;\$TMUX_SOCKET\&quot;&#125; save-buffer - | wl-copy&quot;&#x27;</span></span><br><span class="line"><span class="comment"># copy to macOS clipboard</span></span><br><span class="line"><span class="keyword">if</span> -b <span class="string">&#x27;command -v pbcopy &gt; /dev/null 2&gt;&amp;1&#x27;</span> <span class="string">&#x27;bind y run -b &quot;\&quot;\$TMUX_PROGRAM\&quot; \$&#123;TMUX_SOCKET:+-S \&quot;\$TMUX_SOCKET\&quot;&#125; save-buffer - | pbcopy&quot;&#x27;</span></span><br><span class="line"><span class="comment"># copy to Windows clipboard</span></span><br><span class="line"><span class="keyword">if</span> -b <span class="string">&#x27;command -v clip.exe &gt; /dev/null 2&gt;&amp;1&#x27;</span> <span class="string">&#x27;bind y run -b &quot;\&quot;\$TMUX_PROGRAM\&quot; \$&#123;TMUX_SOCKET:+-S \&quot;\$TMUX_SOCKET\&quot;&#125; save-buffer - | clip.exe&quot;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> -b <span class="string">&#x27;[ -c /dev/clipboard ]&#x27;</span> <span class="string">&#x27;bind y run -b &quot;\&quot;\$TMUX_PROGRAM\&quot; \$&#123;TMUX_SOCKET:+-S \&quot;\$TMUX_SOCKET\&quot;&#125; save-buffer - &gt; /dev/clipboard&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- buffers -------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bind</span> b list-buffers     <span class="comment"># list paste buffers</span></span><br><span class="line"><span class="built_in">bind</span> p paste-buffer -p  <span class="comment"># paste from the top paste buffer</span></span><br><span class="line"><span class="built_in">bind</span> P choose-buffer    <span class="comment"># choose which buffer to paste from</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- 8&lt; ------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">%<span class="keyword">if</span> <span class="comment">#&#123;==:#&#123;TMUX_PROGRAM&#125;,&#125;</span></span><br><span class="line">  run <span class="string">&#x27;TMUX_PROGRAM=&quot;$(LSOF=$(PATH=&quot;$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&quot; command -v lsof); $LSOF -b -w -a -d txt -p #&#123;pid&#125; -Fn 2&gt;/dev/null | perl -n -e &quot;if (s/^n((?:.(?!dylib$|so$))+)$/\1/g &amp;&amp; s/(?:\s+\([^\s]+?\))?$//g) &#123; print; exit &#125; &#125; exit 1; &#123;&quot; || readlink &quot;/proc/#&#123;pid&#125;/exe&quot; 2&gt;/dev/null)&quot;; &#123; [ -f &quot;$TMUX_PROGRAM&quot; ] &amp;&amp; [ -x &quot;$TMUX_PROGRAM&quot; ]; &#125; || TMUX_PROGRAM=&quot;$(command -v tmux || printf tmux)&quot;; &quot;$TMUX_PROGRAM&quot; -S #&#123;socket_path&#125; set-environment -g TMUX_PROGRAM &quot;$TMUX_PROGRAM&quot;&#x27;</span></span><br><span class="line">%endif</span><br><span class="line">%<span class="keyword">if</span> <span class="comment">#&#123;==:#&#123;TMUX_SOCKET&#125;,&#125;</span></span><br><span class="line">  run <span class="string">&#x27;&quot;$TMUX_PROGRAM&quot; -S #&#123;socket_path&#125; set-environment -g TMUX_SOCKET &quot;#&#123;socket_path&#125;&quot;&#x27;</span></span><br><span class="line">%endif</span><br><span class="line">%<span class="keyword">if</span> <span class="comment">#&#123;==:#&#123;TMUX_CONF&#125;,&#125;</span></span><br><span class="line">  run <span class="string">&#x27;&quot;$TMUX_PROGRAM&quot; set-environment -g TMUX_CONF $(for conf in &quot;$HOME/.tmux.conf&quot; &quot;$XDG_CONFIG_HOME/tmux/tmux.conf&quot; &quot;$HOME/.config/tmux/tmux.conf&quot;; do [ -f &quot;$conf&quot; ] &amp;&amp; printf &quot;%s&quot; &quot;$conf&quot; &amp;&amp; break; done)&#x27;</span></span><br><span class="line">%endif</span><br><span class="line">%<span class="keyword">if</span> <span class="comment">#&#123;==:#&#123;TMUX_CONF_LOCAL&#125;,&#125;</span></span><br><span class="line">  run <span class="string">&#x27;&quot;$TMUX_PROGRAM&quot; set-environment -g TMUX_CONF_LOCAL &quot;$TMUX_CONF.local&quot;&#x27;</span></span><br><span class="line">%endif</span><br><span class="line"></span><br><span class="line">run <span class="string">&#x27;&quot;$TMUX_PROGRAM&quot; source &quot;$TMUX_CONF_LOCAL&quot;&#x27;</span></span><br><span class="line">run <span class="string">&#x27;cut -c3- &quot;$TMUX_CONF&quot; | sh -s _apply_configuration&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="命令行的艺术"><a href="#命令行的艺术" class="headerlink" title="命令行的艺术"></a>命令行的艺术</h2><p><a href="https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md">命令行的艺术</a></p><ul><li><code>free -hs 1</code> 查看系统内存使用情况。</li><li><code>ulimit -a</code> 查看系统资源限制。</li><li><code>vmstat -a</code> 查看系统内存使用情况。</li><li><code>ipcs -m</code> 查看共享内存。</li><li><code>route -n</code> 查看路由表。</li><li><code>pint -c 3 -i 3 www.baidu.com</code> 测试网络连接。数量，间隔。</li><li><code>ifconfig</code> 查看网络接口。</li><li><code>netstat</code> 查看网络连接。</li></ul><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ol><li><p>**&amp;**：在命令末尾加上这个符号可以将命令放到后台执行。例如，<code>command &amp;</code> 会在后台运行 <code>command</code>，而不会阻塞终端。</p></li><li><p><strong>Ctrl-Z</strong>：这个快捷键用于暂停当前正在执行的前台任务，并将其放入后台。任务会被挂起，并可以使用 <code>fg</code> 命令恢复。</p></li><li><p><strong>Ctrl-C</strong>：这个快捷键用于终止当前前台任务。它会发送一个中断信号 (SIGINT) 给正在运行的程序，通常用于停止运行中的命令。</p></li><li><p><strong>jobs</strong>：这个命令用于列出当前用户在 Bash 中的所有任务，包括在前台和后台的任务。输出会显示任务的状态（如“运行中”、“已停止”等）。</p></li><li><p><strong>fg</strong>：这个命令用于将后台任务调回前台。可以指定具体的任务，例如 <code>fg %1</code> 将第一个任务调到前台。</p></li><li><p><strong>bg</strong>：这个命令用于将暂停的任务在后台继续执行。执行 <code>bg %1</code> 将第一个任务恢复在后台运行。</p></li><li><p><strong>kill</strong>：这个命令用于终止指定的任务。可以使用任务的PID（进程ID）或作业号。例如，<code>kill %1</code> 会终止作业号为1的任务，<code>kill 1234</code> 则会结束进程ID为1234的任务。</p></li><li><p><strong>du</strong>：这个命令用于显示指定目录或文件所占用的磁盘空间。<code>du -hs *</code> 可以显示当前目录下所有文件的大小。</p></li><li><p><strong>df</strong>：这个命令用于显示磁盘分区的使用情况。<code>df -h</code> 可以以可读方式显示。</p></li><li><p><strong>lsblk</strong>：这个命令用于列出所有块设备的信息。<code>lsblk -f</code>查看文件系统类型。</p></li><li><p><strong>ip</strong>：这个命令用于显示网络接口的信息。<code>ip addr show</code>显示网卡信息。取代<code>ifconfig</code>命令。启用网络接口：<code>ip link set eth0 up</code>。禁用网络接口：<code>ip link set eth0 down</code>。查看路由信息：<code>ip route show</code>。</p></li><li><p><strong>dig</strong>：这个命令用于查询DNS记录。<code>dig www.baidu.com</code>查询<a href="http://www.baidu.com的IP地址。使用特定DNS服务器：`dig">www.baidu.com的IP地址。使用特定DNS服务器：`dig</a> @8.8.8.8 <a href="http://www.baidu.com`./">www.baidu.com`。</a></p></li><li><p><code>grep</code> 和 <code>egrep</code></p></li></ol><ul><li><p><strong>grep</strong>：用于在文本中搜索匹配的行，并输出包含匹配字符串的行。</p></li><li><p><strong>egrep</strong>：这是 <code>grep -E</code> 的简写，支持扩展的正则表达式，允许更多的模式匹配特性（例如，使用 <code>+</code>、<code>?</code> 和 <code>|</code> 等）。</p><ol><li><code>-i</code>：忽略大小写</li></ol><ul><li>示例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -i <span class="string">&quot;pattern&quot;</span> filename</span><br></pre></td></tr></table></figure></li><li>这个命令将在 <code>filename</code> 文件中查找 “pattern”，并忽略大小写。</li></ul><ol start="2"><li><code>-o</code>：只输出匹配的部分</li></ol><ul><li>示例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -o <span class="string">&quot;pattern&quot;</span> filename</span><br></pre></td></tr></table></figure></li><li>这个命令仅显示文件中匹配的文本，而不显示整行。</li></ul><ol start="3"><li><code>-v</code>：反向匹配</li></ol><ul><li>示例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="string">&quot;pattern&quot;</span> filename</span><br></pre></td></tr></table></figure></li><li>这个命令输出不包含 “pattern” 的行。</li></ul><ol start="4"><li><code>-A NUM</code>：输出匹配行后面的 NUM 行</li></ol><ul><li>示例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -A 3 <span class="string">&quot;pattern&quot;</span> filename</span><br></pre></td></tr></table></figure></li><li>这个命令将输出包含 “pattern” 的行及其后面的 3 行。</li></ul><ol start="5"><li><code>-B NUM</code>：输出匹配行前面的 NUM 行</li></ol><ul><li>示例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -B 2 <span class="string">&quot;pattern&quot;</span> filename</span><br></pre></td></tr></table></figure></li><li>这个命令将输出包含 “pattern” 的行及其前面的 2 行。</li></ul><ol start="6"><li><code>-C NUM</code>：输出匹配行前后各 NUM 行</li></ol><ul><li>示例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -C 1 <span class="string">&quot;pattern&quot;</span> filename</span><br></pre></td></tr></table></figure></li><li>这个命令将输出包含 “pattern” 的行及其前后各 1 行。</li></ul><p>假设有一个名为 <code>example.txt</code> 的文件，内容如下：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br><span class="line">This <span class="built_in">is</span> a test file.</span><br><span class="line"><span class="keyword">Let</span><span class="comment">&#x27;s learn regular expressions.</span></span><br><span class="line">Goodbye World</span><br></pre></td></tr></table></figure><ul><li><p>查找包含 “world”（忽略大小写）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -i <span class="string">&quot;world&quot;</span> example.txt</span><br></pre></td></tr></table></figure></li><li><p>只输出匹配到的 “World”：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -o <span class="string">&quot;World&quot;</span> example.txt</span><br></pre></td></tr></table></figure></li><li><p>输出不包含 “test” 的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="string">&quot;test&quot;</span> example.txt</span><br></pre></td></tr></table></figure></li><li><p>查找 “is” 并输出后面的 2 行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -A 2 <span class="string">&quot;is&quot;</span> example.txt</span><br></pre></td></tr></table></figure></li><li><p>查找 “Hello” 并输出前面的 1 行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -B 1 <span class="string">&quot;Hello&quot;</span> example.txt</span><br></pre></td></tr></table></figure></li><li><p>查找 “World” 并输出前后各 1 行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -C 1 <span class="string">&quot;World&quot;</span> example.txt</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h3><ol><li><p><strong>Ctrl-W</strong>：删除最后一个单词</p><ul><li>当在终端中输入命令时，按 <code>Ctrl-W</code> 将删除光标前的一个完整单词。</li></ul></li><li><p><strong>Ctrl-U</strong>：删除光标所在位置之前的内容</p><ul><li>当输入命令时，按 <code>Ctrl-U</code> 会删除光标前的所有内容，这对于快速清除输入非常有用。</li></ul></li><li><p><strong>Alt-B</strong>：向后移动光标一个单词</p><ul><li>按 <code>Alt-B</code> 可以将光标向后移动一个单词，便于在进行编辑时精确定位。</li></ul></li><li><p><strong>Alt-F</strong>：向前移动光标一个单词</p><ul><li>按 <code>Alt-F</code> 可以将光标向前移动一个单词。</li></ul></li><li><p><strong>Ctrl-A</strong>：将光标移至行首</p><ul><li>按 <code>Ctrl-A</code> 会将光标移到当前输入行的最开头。</li></ul></li><li><p><strong>Ctrl-E</strong>：将光标移至行尾</p><ul><li>按 <code>Ctrl-E</code> 会将光标移到当前输入行的最末尾。</li></ul></li><li><p><strong>Ctrl-K</strong>：删除光标至行尾的所有内容</p><ul><li>当光标在行中时，按 <code>Ctrl-K</code> 会删除光标右侧至行尾的所有内容。</li></ul></li><li><p><strong>Ctrl-L</strong>：清屏</p><ul><li>按 <code>Ctrl-L</code> 可以清除当前终端屏幕并重新显示提示符，类似于执行 <code>clear</code> 命令。</li></ul></li><li><p>**Alt-.**：循环地移向前一个参数</p><ul><li>在命令行输入中，按 <code>Alt-.</code> 可以逐个循环访问之前命令的最后一项参数。</li></ul></li><li><p>**Alt-***：展开通配符</p><ul><li>按 <code>Alt-*</code> 将展开当前目录下的所有匹配文件名，这对使用通配符命令非常方便。</li></ul></li><li><p><strong>pgrep</strong>：根据名字查找进程。</p></li><li><p><strong>honup</strong>：使后台进程在用户退出终端会话后继续运行。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pip</title>
      <link href="/2024/08/12/pip/"/>
      <url>/2024/08/12/pip/</url>
      
        <content type="html"><![CDATA[<p><a href="https://realpython.com/what-is-pip/">Python 的 pip 管理项目的依赖项</a></p><h2 id="pip命令"><a href="#pip命令" class="headerlink" title="pip命令"></a>pip命令</h2><p><code>pip --version</code> 查看pip版本</p><p><code>pip install --upgrade pip</code> 更新pip版本或者<code>python -m pip install --upgrade pip</code></p><p><code>pip install Django==2.2.13</code> 安装包</p><p><code>pip uninstall 包名</code> 卸载包</p><p><code>pip show 包名</code> 查看包信息</p><p><code>pip list</code> 查看已安装的包</p><p><code>pip list --outdated</code> 查看过期的包，也即可升级包</p><p><code>pip search 包名</code> 搜索包</p><p><code>pip freeze</code> 输出当前环境中安装的包</p><p><code>pip freeze &gt; requirements.txt</code> 重定向输出生成requirements.txt文件</p><p><code>pip freeze | grep -v example-package</code> 过滤掉example-package</p><p><code>pip install -r requirements.txt</code> 安装requirements.txt文件中的包</p><p><img src="/images/pip/requirements.png" alt="requirements.txt文件示例"></p><p><img src="/images/pip/bash.png" alt="bash命令示例"></p><p><code>pip install --upgrade 包名</code> 更新包</p><p><code>pip install --upgrade pip 包名</code> 更新pip和包</p><p><code>pip install --user 包名</code> 安装包到用户目录</p><p><code>pip install --index-url https://pypi.tuna.tsinghua.edu.cn/simple/ 包名</code> 使用清华镜像安装包</p><p><code>pip install --trusted-host pypi.tuna.tsinghua.edu.cn 包名</code> 使用清华镜像安装包</p><p><code>pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</code> 设置镜像源</p><p><code>pip config set install.trusted-host mirrors.aliyun.com</code> 设置镜像源</p><p>当一个项目需要多人协作的时候，流程往往是这样的：</p><p>一个人：创建新的虚拟环境并激活 -&gt; 安装必要的包 -&gt; 导出到 requirements.txt 中，一并上传至项目仓库<br>其他人：把仓库拉下来 -&gt; 创建新的虚拟环境并激活 -&gt; 根据 requirements.txt 安装需要的包<br>事实上 conda 自身也可以进行包管理，更为正确的做法也是使用 environment.yml</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda</title>
      <link href="/2024/08/12/conda/"/>
      <url>/2024/08/12/conda/</url>
      
        <content type="html"><![CDATA[<h3 id="1-创建环境"><a href="#1-创建环境" class="headerlink" title="1. 创建环境"></a>1. 创建环境</h3><p><code>conda create -n 环境名称 python=版本号</code></p><h3 id="2-激活环境"><a href="#2-激活环境" class="headerlink" title="2. 激活环境"></a>2. 激活环境</h3><p><code>conda activate 环境名称</code></p><h3 id="3-停用环境"><a href="#3-停用环境" class="headerlink" title="3. 停用环境"></a>3. 停用环境</h3><p><code>conda deactivate</code></p><h3 id="4-删除环境"><a href="#4-删除环境" class="headerlink" title="4. 删除环境"></a>4. 删除环境</h3><p><code>conda remove -n 环境名称 --all</code></p><h3 id="5-安装包"><a href="#5-安装包" class="headerlink" title="5. 安装包"></a>5. 安装包</h3><p><code>conda install 包名称</code><br><strong>用途</strong>：用于在当前环境中安装指定的包。</p><h3 id="6-升级包"><a href="#6-升级包" class="headerlink" title="6. 升级包"></a>6. 升级包</h3><p><code>conda update 包名称</code><br><strong>用途</strong>：用于更新已安装包的版本。</p><h3 id="7-卸载包"><a href="#7-卸载包" class="headerlink" title="7. 卸载包"></a>7. 卸载包</h3><p><code>conda remove 包名称</code><br><strong>用途</strong>：用于从当前环境中卸载指定的包。</p><h3 id="8-查看已安装的包"><a href="#8-查看已安装的包" class="headerlink" title="8. 查看已安装的包"></a>8. 查看已安装的包</h3><p><code>conda list</code><br><strong>用途</strong>：用于列出当前环境中已安装的包。</p><h3 id="9-搜索包"><a href="#9-搜索包" class="headerlink" title="9. 搜索包"></a>9. 搜索包</h3><p><code>conda search 包名称</code><br><strong>用途</strong>：用于在 Conda 仓库中搜索指定的包。</p><h3 id="10-创建环境配置文件"><a href="#10-创建环境配置文件" class="headerlink" title="10. 创建环境配置文件"></a>10. 创建环境配置文件</h3><p><code>conda env export &gt; environment.yml</code><br><strong>用途</strong>：用于将当前环境的配置导出到一个 YAML 文件中，以便在其他地方进行复制或重建环境。</p><h3 id="11-查看配置信息"><a href="#11-查看配置信息" class="headerlink" title="11. 查看配置信息"></a>11. 查看配置信息</h3><p><code>conda config --show</code><br><strong>用途</strong>：显示当前的 Conda 配置信息，包括通用配置、环境配置和用户配置。</p><h3 id="12-查看某个配置项的值"><a href="#12-查看某个配置项的值" class="headerlink" title="12. 查看某个配置项的值"></a>12. 查看某个配置项的值</h3><p><code>conda config --show 配置项</code><br><strong>用途</strong>：显示特定配置项的当前值，例如：<code>conda config --show channels</code> 用于显示当前配置的通道列表。</p><h3 id="13-设置配置项的值"><a href="#13-设置配置项的值" class="headerlink" title="13. 设置配置项的值"></a>13. 设置配置项的值</h3><p><code>conda config --set 配置项=值</code><br><strong>用途</strong>：例如：<code>conda config --set channels conda-forge</code> 用于将通道设置为 <code>conda-forge</code>。</p><h3 id="14-添加通道"><a href="#14-添加通道" class="headerlink" title="14. 添加通道"></a>14. 添加通道</h3><p><code>conda config --add channels 通道名称</code><br><strong>用途</strong>：向配置中添加一个新的通道，使 Conda 在包搜索和安装时优先考虑该通道。</p><h3 id="15-移除通道"><a href="#15-移除通道" class="headerlink" title="15. 移除通道"></a>15. 移除通道</h3><p><code>conda config --remove channels 通道名称</code><br><strong>用途</strong>：从配置中移除指定的通道，使 Conda 不再使用该通道。</p><h3 id="16-列出所有通道"><a href="#16-列出所有通道" class="headerlink" title="16. 列出所有通道"></a>16. 列出所有通道</h3><p><code>conda config --get channels</code><br><strong>用途</strong>：列出当前配置中所有配置的通道。</p><h3 id="17-重置配置项"><a href="#17-重置配置项" class="headerlink" title="17. 重置配置项"></a>17. 重置配置项</h3><p><code>conda config --remove-key 配置项</code><br><strong>用途</strong>：重置指定配置项的值为默认值。</p><h3 id="18-编辑配置文件"><a href="#18-编辑配置文件" class="headerlink" title="18. 编辑配置文件"></a>18. 编辑配置文件</h3><p><code>conda config --edit</code><br><strong>用途</strong>：打开配置文件以进行手动编辑，可以修改各种配置选项。</p><h3 id="19-创建具有指定版本的环境"><a href="#19-创建具有指定版本的环境" class="headerlink" title="19. 创建具有指定版本的环境"></a>19. 创建具有指定版本的环境</h3><p><code>conda create --name myenv python=3.10.6</code><br><strong>用途</strong>：创建一个指定 Python 版本的环境。</p><h3 id="20-从环境中导出和导入环境配置"><a href="#20-从环境中导出和导入环境配置" class="headerlink" title="20. 从环境中导出和导入环境配置"></a>20. 从环境中导出和导入环境配置</h3><p><strong>导出环境配置</strong><br><code>conda env export --name myenv --file environment.yml</code><br><strong>导入环境配置</strong><br><code>conda env create --file environment.yml</code><br><strong>用途</strong>：导出和导入环境配置以便在其他地方复制或重建环境。</p><h3 id="21-创建一个虚拟环境的克隆"><a href="#21-创建一个虚拟环境的克隆" class="headerlink" title="21. 创建一个虚拟环境的克隆"></a>21. 创建一个虚拟环境的克隆</h3><p><code>conda create --name myclone --clone myenv</code><br><strong>用途</strong>：创建一个现有环境的克隆。</p><p><img src="/images/conda/%E8%8B%B1%E7%89%B9%E5%B0%94%E6%98%BE%E5%8D%A1.png" alt="英特尔显卡"></p><p><img src="/images/conda/Python%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9.png" alt="Python版本选择"></p><p><img src="/images/conda/PyTorch%E5%AE%89%E8%A3%85.png" alt="PyTorch安装"></p><p>在激活的环境中使用：<br><code>conda install pytorch torchvision torchaudio cpuonly -c pytorch</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2024/08/10/git/"/>
      <url>/2024/08/10/git/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：本文是作者学习git的笔记。推荐学习路径（按顺序）：</p><ol><li>了解基础概念：<br><a href="https://www.runoob.com/git/git-tutorial.html">Git 教程 - 菜鸟教程</a></li><li>深入浅出的理解：<br><a href="https://github.com/geeeeeeeeek/git-recipes/">Git recipe</a></li><li>练习分支操作：<br><a href="https://learngitbranching.js.org/?locale=zh_CN">Git 分支可视化</a></li><li>工作流管理：<br><a href="https://blog.csdn.net/sunyctf/article/details/130587970">Gitflow工作流</a></li><li>约定式提交：<br><a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/">约定式提交</a></li></ol></blockquote><h2 id="1-学习资料"><a href="#1-学习资料" class="headerlink" title="1. 学习资料"></a>1. 学习资料</h2><ul><li><strong>官方文档</strong>：<a href="https://git-scm.com/docs">Git 官方文档</a></li><li><strong>Git 相关</strong>：<ul><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git 教程 - 廖雪峰的官方网站</a></li><li><a href="https://git-scm.com/book/zh/v2">Git 书籍 - Pro Git</a></li><li><a href="https://github.com/b1f6c1c4/learn-git-the-super-hard-way">学习Git底层原理 - learn-git-the-super-hard-way</a></li><li><a href="https://education.github.com/git-cheat-sheet-education.pdf">Git Cheat Sheet</a></li><li><a href="https://www.gitwiki.org/">Git Wiki</a></li><li><a href="https://zjdoc-gitguide.readthedocs.io/zh-cn/latest/index.html">GitGuide</a> 这里面还有关于 Github 的美化教程。</li></ul></li></ul><h2 id="2-Git基础"><a href="#2-Git基础" class="headerlink" title="2. Git基础"></a>2. Git基础</h2><h3 id="2-1-查看文档"><a href="#2-1-查看文档" class="headerlink" title="2.1 查看文档"></a>2.1 查看文档</h3><ul><li><strong>查看命令帮助</strong>：<ul><li><code>git &lt;command&gt; --help</code></li><li><code>git help &lt;command&gt;</code></li><li><code>man git-&lt;command&gt;</code></li></ul></li></ul><h3 id="2-2-安装配置"><a href="#2-2-安装配置" class="headerlink" title="2.2 安装配置"></a>2.2 安装配置</h3><ul><li><strong>配置文件位置</strong>：<ul><li>局部：<code>.git/config</code></li><li>全局：<code>~/.gitconfig</code></li><li>系统：<code>/etc/gitconfig</code></li></ul></li><li><strong>git config</strong>:<ul><li><code>git config --global user.name &quot;your name&quot;</code>：设置用户名</li><li><code>git config --global user.email &quot;your email&quot;</code>：设置邮箱</li><li><code>git config --global --edit</code>：编辑全局配置文件  </li><li><code>git config --global --unset alias.co</code>：删除全局别名</li><li><code>git config --global alias.co checkout</code>：设置全局别名</li><li><code>git config --list</code>：查看所有配置信息</li></ul></li></ul><h3 id="2-3-工作区、暂存区和版本库"><a href="#2-3-工作区、暂存区和版本库" class="headerlink" title="2.3 工作区、暂存区和版本库"></a>2.3 工作区、暂存区和版本库</h3><ul><li><strong>git status</strong>：查看当前状态<ul><li><code>git status -s</code>：简化输出</li></ul></li><li><strong>git add</strong>：工作区 → 暂存区<ul><li><code>git add . </code>：添加所有文件到暂存区</li><li><code>git add -u</code>：添加所有已修改文件到暂存区</li></ul></li><li><strong>git commit</strong>：暂存区 → 版本库<ul><li><code>git commit -m &quot;commit message&quot;</code>：提交暂存区到版本库</li><li><code>git commit -a -m &quot;commit message&quot;</code>：提交所有已修改文件到版本库</li><li><code>git commit --amend -m &quot;commit message&quot;</code>：修改上次提交(会破坏之前的提交记录)。它允许你将缓存的修改和之前的提交合并到一起，而不是提交一个全新的快照。它还可以用来简单地编辑上一次提交的信息而不改变快照。</li><li><code>git commit --amend --no-edit</code></li></ul></li><li><strong>git stash</strong>：暂存区操作<ul><li><code>git stash list</code>：查看暂存区列表</li><li><code>git stash pop</code>：恢复暂存区文件</li><li><code>git stash apply &lt;stash-id&gt;</code>：恢复指定暂存区文件</li><li><code>git stash drop &lt;stash-id&gt;</code>：删除指定暂存区文件</li><li><code>git stash clear</code>：清空暂存区</li></ul></li><li><strong>git restore</strong>：恢复文件<ul><li><code>git restore &lt;file&gt;</code>：恢复暂存区文件，<u>工作区受影响</u><blockquote><p><code>git restore ./source/_posts/git使用.md</code>:我在进行代码编辑时，将一部分工作提交到缓存区，然后做了一些修改，这时我想撤销这部分工作，这时就可以使用<code>git restore</code>命令。</p></blockquote></li><li><code>git restore --staged &lt;file&gt;</code>：恢复暂存区文件，<u>工作区不受影响</u></li><li><code>git restore --staged &lt;file&gt;</code>：恢复暂存区文件，<u>工作区不受影响</u></li><li><code>git restore --source &lt;commit-id&gt; &lt;file&gt;</code>：恢复指定提交版本文件，工作区受影响<blockquote><p><code>git restore --source=HEAD~1 ./source/_posts/git使用.md</code>:将上一次提交的<code>git使用.md</code>文件恢复到工作区。</p></blockquote></li></ul></li></ul><blockquote><p><a href="https://github.com/geeeeeeeeek/git-recipes/wiki/2.6-%E5%9B%9E%E6%BB%9A%E9%94%99%E8%AF%AF%E7%9A%84%E4%BF%AE%E6%94%B9">回滚错误的更改 git reset 和 git revert 和 git clean</a></p></blockquote><ul><li><strong>git reset</strong>：版本库 → 暂存区<ul><li><code>git reset HEAD</code>：取消所有暂存区文件</li><li><code>git reset HEAD &lt;file&gt;</code>：取消暂存区文件</li><li><code>git reset --soft HEAD^</code>：取消上一次提交，不影响工作区。适合想要修改提交信息的情况。</li><li><code>git reset --hard HEAD^</code>：撤销上一次提交，影响工作区</li></ul></li><li><strong>git revert</strong>：撤销提交<ul><li><code>git revert &lt;commit-id&gt;</code>：撤销指定提交，会生成一个新的提交记录</li><li><code>git revert HEAD</code>：撤销上一次提交，会生成一个新的提交记录</li></ul></li><li><strong>git clean</strong>：清理工作区<ul><li><code>git clean -f</code>：强制删除未跟踪文件</li><li><code>git clean -df</code>：强制删除未跟踪目录，会删除空目录</li><li><code>git clean -d -f</code>：强制删除未跟踪目录及子目录</li></ul></li><li><strong>git diff</strong>：显示工作区与暂存区的差异<blockquote><p><code>git d ./*/*/git使用.md</code>：加了别名以后使用</p></blockquote><ul><li><code>git diff HEAD</code>：显示工作区和版本库差异</li><li><code>git diff &lt;commit-id&gt; &lt;commit-id&gt;</code>：显示两个提交间差异</li><li><code>git diff &lt;file-path&gt;</code>:显示文件差异</li><li><code>git diff --name-only</code>：只显示暂存区和工作区差异文件名</li><li><code>git diff --stat</code>：显示文件级别简要统计信息</li></ul></li><li><strong>git difftool</strong>：使用外部工具查看差异<ul><li><code>git difftool --tool=gvimdiff &lt;file-path&gt;</code>：使用gvimdiff工具查看文件差异</li></ul></li></ul><h3 id="2-4-分支操作"><a href="#2-4-分支操作" class="headerlink" title="2.4 分支操作"></a>2.4 分支操作</h3><ul><li><strong>git branch</strong>：分支管理<ul><li><code>git branch -v</code>：查看所有分支，并显示最后一次提交信息</li><li><code>git branch -r</code>：查看远程分支</li><li><code>git branch -a</code>：查看所有分支（包括本地和远程）</li><li><code>git branch -m &lt;old-name&gt; &lt;new-name&gt;</code>：重命名分支</li><li><code>git branch --merged</code>：查看已合并分支</li><li><code>git branch --contains &lt;commit-id&gt;</code>：查看包含指定提交的分支</li><li><code>git branch -d &lt;branch-name&gt;</code>：删除分支</li><li><code>git branch -f &lt;branch-name&gt; &lt;commit-id&gt;</code>：强制移动分支指针<blockquote><p><code>git branch -f master HEAD</code>:找回master分支</p></blockquote></li><li><code>git branch --set-upstream-to=&lt;remote&gt;/&lt;branch&gt;</code>：设置跟踪分支</li><li><code>git branch --unset-upstream</code>：取消跟踪分支</li><li><code>git branch --track &lt;branch-name&gt; &lt;remote&gt;/&lt;branch&gt;</code>：创建远程分支并跟踪</li></ul></li><li><strong>git switch</strong>：切换分支<ul><li><code>git switch -c</code>:创建并切换分支</li><li><code>git switch --detach|-d &lt;commit-id&gt;</code>：分离头指针，<u>工作区不受影响</u></li></ul></li><li><strong>git merge</strong>：合并分支<ul><li><code>git merge &lt;branch-name&gt;</code>：合并指定分支到当前分支</li><li><code>git merge --no-ff &lt;branch-name&gt;</code>：禁用Fast-Forward合并，保留分支历史</li><li><code>git merge --abort</code>：取消合并</li><li><code>git cherry-pick &lt;commit-id&gt;</code>：选择性合并提交</li></ul></li><li><strong>git rebase</strong>：变基操作。从内容的角度来看，rebase 只不过是将分支从一个提交移到了另一个。但从内部机制来看，Git 是通过在选定的基上创建新提交来完成这件事的——它事实上重写了你的项目历史。尽管分支看上去是一样的，但它包含了全新的提交。<ul><li><code>git rebase -i &lt;commit-id&gt;</code>：交互式变基<blockquote><p>pick：保留该提交（默认）<br>squash：将当前提交与前一个提交合并，但保留两个提交的日志信息（需要手动合并日志）<br>fixup：类似于 squash，但会自动丢弃当前提交的日志信息，只保留前一个提交的日志<br>drop：删除该提交</p></blockquote></li><li><code>git rebase --onto &lt;new-base&gt; &lt;branch-name&gt;</code>：变基指定分支到新基</li><li><code>git rebase --continue</code>：继续变基</li><li><code>git rebase --abort</code>：取消变基</li></ul></li></ul><h3 id="2-5-远端操作"><a href="#2-5-远端操作" class="headerlink" title="2.5 远端操作"></a>2.5 远端操作</h3><ul><li><strong>git clone</strong>：克隆远端仓库<ul><li><code>git clone -b &lt;branch-name&gt; &lt;url&gt;</code>：克隆指定分支</li><li><code>git clone --recurse &lt;url&gt;</code>：克隆含子模块仓库</li><li><code>git clone --depth &lt;depth&gt; &lt;url&gt;</code>：克隆指定深度</li></ul></li><li><strong>git remote</strong>：远端管理<ul><li><code>git remote -v</code>：查看所有远程仓库</li><li><code>git remote add &lt;name&gt; &lt;url&gt;</code>：添加远程仓库</li><li><code>git remote remove &lt;name&gt;</code>：删除远程仓库</li><li><code>git remote rename &lt;old-name&gt; &lt;new-name&gt;</code>：重命名远程仓库</li><li><code>git remote show &lt;name&gt;</code>：显示远程仓库信息</li><li><code>git remote update</code>：更新远程仓库信息</li></ul></li><li><strong>git fetch</strong>：收取远端变化<ul><li><code>git fetch &lt;name&gt;</code>：拉取远程仓库变化</li><li><code>git fetch &lt;name&gt; &lt;branch-name&gt;</code>：拉取指定分支变化</li><li><code>git fetch --all</code>：拉取所有远程仓库变化</li></ul></li><li><strong>git pull</strong>：<code>git fetch + git merge</code>（或<code>git rebase</code>）<ul><li><code>git pull &lt;name&gt; &lt;branch-name&gt;</code>：拉取指定分支并合并到当前分支</li><li><code>git pull --rebase &lt;name&gt; &lt;branch-name&gt;</code>：拉取指定分支并变基到当前分支</li><li><code>git pull --all</code>：拉取所有分支并合并到当前分支</li><li><code>git pull --rebase --all</code>：拉取所有分支并变基到当前分支</li></ul></li><li><strong>git push</strong>：推送本地变化到远端<ul><li><code>git push &lt;name&gt; &lt;branch-name&gt;</code>：推送指定分支到远程仓库</li><li><code>git push &lt;name&gt; --all</code>：推送所有分支到远程仓库</li><li><code>git push &lt;name&gt; --tags</code>：推送所有标签到远程仓库</li><li><code>git push -u &lt;name&gt; &lt;branch-name&gt;</code>：推送指定分支到远程仓库并设置默认分支</li></ul></li><li><strong>git submodule</strong>：子模块管理<ul><li><code>git submodule add &lt;url&gt; &lt;path&gt;</code>：添加子模块</li><li><code>git submodule init</code>：初始化子模块</li><li><code>git submodule update</code>：更新子模块<blockquote><p><code>git submodule update --init --recursive</code>：初始化所有子模块并更新所有子模块(当你克隆了仓库却发现它还有子模块时，可以使用这个命令来初始化子模块)</p></blockquote></li><li><code>git submodule foreach git &lt;command&gt;</code>：在子模块中执行命令</li><li><code>git submodule status</code>：查看子模块状态</li><li><code>git submodule add &lt;url&gt; &lt;path&gt;</code>：添加子模块</li><li><code>git submodule init</code>：初始化子模块</li><li><code>git submodule update</code>：更新子模块</li><li><code>git submodule foreach git &lt;command&gt;</code>：在子模块中执行命令</li><li><code>git submodule status</code>：查看子模块状态</li></ul></li></ul><h3 id="2-6-提交日志"><a href="#2-6-提交日志" class="headerlink" title="2.6 提交日志"></a>2.6 提交日志</h3><ul><li><strong>git log</strong>：展示历史，当然这么长的参数要设置别名啦<ul><li><code>git log -p -2</code> 显示每次提交所引入的差异，最近两次提交</li><li><code>git log --oneline</code></li><li><code>git log -S function_name</code></li><li><code>git log --since=2024-8-4</code></li><li><code>git log --since=&quot;2.weeks&quot;</code>：查看最近两周提交记录</li><li><code>git log --until=&quot;2021-01-01&quot;</code>：查看2021年1月1日之前提交记录</li><li><code>git log --graph</code>：查看所有提交记录，图形化显示</li><li><code>git log --decorate</code>：查看所有提交记录，显示分支信息</li><li><code>git log --pretty=format:&quot;%h - %an, %ar : %s&quot;</code>：自定义日志格式</li><li><code>git log --stat</code>：查看提交统计信息</li><li><code>git log --patch</code>：查看每个提交的具体修改内容</li></ul></li><li><strong>git blame</strong>：查看贡献者<ul><li><code>git blame &lt;file&gt;</code>：查看指定文件每行最后一次修改的提交记录</li><li><code>git blame -L &lt;start&gt;,&lt;end&gt; &lt;file&gt;</code>：查看指定文件指定行范围的最后一次修改的提交记录</li><li><code>git blame -C &lt;file&gt;</code>：查看指定文件每行最后一次修改的提交记录，并显示代码上下文</li></ul></li><li><strong>git shortlog</strong>：统计贡献<ul><li><code>git shortlog -sne</code>：统计提交者、邮箱、贡献数量</li></ul></li><li><strong>git describe</strong>：查看标签信息</li><li><strong>git reflog</strong>:显示引用日志</li></ul><h3 id="2-7-其他命令"><a href="#2-7-其他命令" class="headerlink" title="2.7 其他命令"></a>2.7 其他命令</h3><ul><li><strong>git tag</strong>：标签管理<ul><li><code>git tag -a &lt;tag-name&gt; -m &quot;tag message&quot;</code>：创建标签</li><li><code>git tag -d &lt;tag-name&gt;</code>：删除标签</li><li><code>git tag -l &quot;v1.0.*&quot;</code>：列出所有v1.0版本标签</li></ul></li><li><strong>git show</strong>：显示提交内容<ul><li><code>git show &lt;commit-id&gt;</code>：显示指定提交内容</li><li><code>git show HEAD</code>：显示最新提交内容</li><li><code>git show --name-only &lt;commit-id&gt;</code>：显示指定提交修改的文件名</li><li><code>git show --name-status &lt;commit-id&gt;</code>：显示指定提交修改的文件名和状态</li><li><code>git show --stat &lt;commit-id&gt;</code>：显示指定提交统计信息</li><li><code>git show --patch &lt;commit-id&gt;</code>：显示指定提交具体修改内容</li></ul></li><li><strong>git notes</strong>: 管理备注<ul><li><code>git notes add -m &quot;note message&quot; &lt;commit-id&gt;</code>：添加备注</li><li><code>git notes show &lt;commit-id&gt;</code>：查看备注</li><li><code>git notes edit &lt;commit-id&gt;</code>：编辑备注</li><li><code>git notes merge &lt;commit-id&gt;</code>：合并备注</li><li><code>git notes remove &lt;commit-id&gt;</code>：删除备注</li><li><code>git notes prune</code>：删除过期备注</li></ul></li><li><strong>git grep</strong>：搜索提交内容<ul><li><code>git grep -n &quot;keyword&quot;</code>：搜索所有提交内容，并显示行号</li><li><code>git grep -i &quot;keyword&quot;</code>：搜索不区分大小写</li><li><code>git grep -w &quot;keyword&quot;</code>：只搜索全词匹配</li><li><code>git grep -l &quot;keyword&quot;</code>：只搜索文件名</li><li><code>git grep -c &quot;keyword&quot;</code>：只搜索提交次数</li></ul></li><li><strong>git archive</strong>：创建归档文件<ul><li><code>git archive --format=tar.gz --output=project.tar.gz &lt;commit-id&gt;</code>：创建指定提交的<code>.tar.gz</code>文件</li><li><code>git archive --format=zip --output=project.zip &lt;commit-id&gt;</code>：创建指定提交的<code>.zip</code>文件</li></ul></li><li><strong>git bisect</strong>：在版本树上二分查找定位bug</li><li><strong>git gc&#x2F;prune&#x2F;fsck</strong>：系统检查和垃圾清理</li></ul><h3 id="2-8-Git-别名"><a href="#2-8-Git-别名" class="headerlink" title="2.8 Git 别名"></a>2.8 Git 别名</h3><ul><li><p><strong>配置别名</strong>：使用<code>git config --global alias.&lt;alias-name&gt; &quot;&lt;command&gt;&quot;</code></p></li><li><p><strong>示例</strong>：</p><blockquote><p>lg st ll last cm rv ddv gl se</p></blockquote><ol><li><code>git config --global alias.lg &#39;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit&#39;</code>:查看分支历史，并以颜色、图形化、自定义格式显示</li><li><code>git config --global alias.st &#39;status -s&#39;</code>:查看状态简化输出</li><li><code>git config --global alias.ll &#39;log --oneline&#39;</code>:显示简短的提交记录</li><li><code>git config --global alias.last &#39;log -1 HEAD --stat&#39;</code>:显示最新提交信息和统计信息</li><li><code>git config --global alias.cm &#39;commit -m&#39;</code>:快速提交</li><li><code>git config --global alias.rv &#39;remote -v&#39;</code>:查看远程仓库信息</li><li><code>git config --global alias.d &#39;diff&#39;</code>:快速查看差异</li><li><code>git config --global alias.dv &#39;difftool -t vimdiff -y&#39;</code>:使用vimdiff工具查看差异,linux 下我用 gvimdiff<blockquote><p> 示例：<code>git dv 33559c5 ca1494d file1</code></p></blockquote></li><li><code>git config --global alias.gl &#39;config --global -l&#39;</code>:查看全局配置信息</li><li><code>git config --global alias.se &#39;!git rev-list --all | xargs git grep -F&#39;</code>:搜索所有提交内容</li></ol></li><li><p><strong>编辑别名</strong>: 使用<code>git config --global --edit</code></p></li><li><p><strong>删除别名</strong>：使用<code>git config --global --unset alias.&lt;alias-name&gt;</code></p></li></ul><h3 id="2-9-gitignore"><a href="#2-9-gitignore" class="headerlink" title="2.9 gitignore"></a>2.9 gitignore</h3><ul><li><strong>创建.gitignore文件</strong>：在仓库中创建<code>.gitignore</code>文件，定义不需要Git跟踪的文件和目录</li><li><strong>规则示例</strong>：<ul><li>忽略所有<code>.cpp</code>文件：<code>*.cpp</code></li><li>忽略特定目录：<code>folder/*</code></li><li>不忽略特定文件：<code>!special.cpp</code></li></ul></li></ul><h3 id="2-10-服务器连接"><a href="#2-10-服务器连接" class="headerlink" title="2.10 服务器连接"></a>2.10 服务器连接</h3><ul><li><strong>SSH方式连接</strong>：在ssh连接github后，就可以使用<code>git clone git@hostname:/path/to/repository/.git</code></li><li><strong>配置远端仓库</strong>：在本地仓库中配置<code>git remote add &lt;name&gt; user@hostname:/path/to/repository/.git</code></li></ul><h2 id="3-git-flow"><a href="#3-git-flow" class="headerlink" title="3. git flow"></a>3. git flow</h2><h3 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h3><p>windows:<br><code>scoop install git-flow</code></p><p>archlinux:<br><code>yay -S gitflow-zshcompletion-avh</code></p><h3 id="3-2-Git-Flow-分支模型"><a href="#3-2-Git-Flow-分支模型" class="headerlink" title="3.2 Git Flow 分支模型"></a>3.2 Git Flow 分支模型</h3><ol><li><strong>master 分支</strong></li></ol><ul><li>永远保持稳定和可发布的状态。</li><li>每次发布新版本时，都会从 develop 分支合并到 master 分支。</li></ul><ol start="2"><li><strong>develop 分支</strong></li></ol><ul><li>用于集成所有的开发分支。</li><li>代表最新的开发进度。</li><li>功能分支、发布分支和修复分支都从这里分支出去，最终合并回这里。</li></ul><ol start="3"><li><strong>feature 分支</strong></li></ol><ul><li>用于开发新功能。</li><li>从 develop 分支创建，开发完成后合并回 develop 分支。</li><li><strong>命名规范</strong>：<code>feature/feature-name</code></li></ul><ol start="4"><li><strong>release 分支</strong></li></ol><ul><li>用于准备新版本的发布。</li><li>从 develop 分支创建，进行最后的测试和修复，然后合并回 develop 和 master 分支，并打上版本标签。</li><li><strong>命名规范</strong>：<code>release/release-name</code></li></ul><ol start="5"><li><strong>hotfix 分支</strong></li></ol><ul><li>用于修复紧急问题。</li><li>从 master 分支创建，修复完成后合并回 master 和 develop 分支，并打上版本标签。</li><li><strong>命名规范</strong>：<code>hotfix/hotfix-name</code></li></ul><ol start="6"><li><strong>support 分支</strong></li></ol><ul><li>用于维护长期支持版本。</li><li>仅从 master 分支创建，仅限维护人员使用。</li><li><strong>命名规范</strong>：<code>support/support-name</code></li></ul><ol start="7"><li><strong>refactor 分支</strong></li></ol><ul><li>用于重构代码。</li><li>仅从 develop 分支创建，完成后合并回 develop 分支。</li><li><strong>命名规范</strong>：<code>refactor/refactor-name</code></li></ul><h3 id="3-2-工作流"><a href="#3-2-工作流" class="headerlink" title="3.2 工作流"></a>3.2 工作流</h3><ol><li>开始一个新功能分支：<code>git flow feature start &lt;name&gt;</code></li><li>完成一个功能分支：<code>git flow feature finish &lt;name&gt;</code></li><li>开始一个新发布分支：<code>git flow release start &lt;name&gt;</code></li><li>完成一个发布分支：<code>git flow release finish &lt;name&gt;</code></li><li>开始一个新hotfix分支：<code>git flow hotfix start &lt;name&gt;</code></li><li>完成一个hotfix分支：<code>git flow hotfix finish &lt;name&gt;</code></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05后的童年回忆——玩具篇</title>
      <link href="/2024/08/05/toy/"/>
      <url>/2024/08/05/toy/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/toy/%E7%94%BB%E6%9D%BF.png" alt="画板"></p><p><img src="/images/toy/%E7%99%BE%E5%8F%98%E9%AD%94%E5%B0%BA.png" alt="百变魔尺"></p><p><img src="/images/toy/%E7%AB%B9%E8%9C%BB%E8%9C%93.jpg" alt="竹蜻蜓"></p><p><img src="/images/toy/%E6%8B%89%E5%B0%BA%E9%99%80%E8%9E%BA.png" alt="拉尺陀螺"></p><p><img src="/images/toy/%E4%B8%83%E5%B7%A7%E6%9D%BF.png" alt="七巧板"></p><p><img src="/images/toy/%E7%A3%81%E6%82%AC%E6%B5%AE%E9%99%80%E8%9E%BA.jpg" alt="磁悬浮陀螺"></p><p><img src="/images/toy/%E6%B0%B4%E4%B8%AD%E5%A5%97%E5%9C%88%E5%9C%88%E6%B8%B8%E6%88%8F%E6%9C%BA.png" alt="水中套圈圈游戏机"></p><p><img src="/images/toy/%E6%89%98%E9%A9%AC%E6%96%AF%E7%81%AB%E8%BD%A6.png" alt="托马斯火车"></p><p><img src="/images/toy/%E9%9A%90%E8%97%8F%E7%9A%84%E5%9B%BE%E7%94%BB.png" alt="隐藏的图画"></p><p><img src="/images/toy/%E5%9C%B0%E9%BC%A0%E6%9C%BA.png" alt="地鼠机"></p><p><img src="/images/toy/%E6%8C%87%E5%B0%96%E6%BB%91%E6%9D%BF.jpg" alt="指尖滑板"></p><p><img src="/images/toy/%E8%B5%9B%E5%B0%94%E5%8F%B7%E5%8D%A1%E7%89%8C.jpg" alt="赛尔号卡牌"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cmake</title>
      <link href="/2024/08/02/cmake/"/>
      <url>/2024/08/02/cmake/</url>
      
        <content type="html"><![CDATA[<p>先修：<a href="https://seisman.github.io/how-to-write-makefile/overview.html">Makefile</a></p><p><a href="https://modern-cmake-cn.github.io/Modern-CMake-zh_CN/chapters/basics.html">Cmake基础知识简介</a></p><h3 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h3><table><thead><tr><th>厂商</th><th>C</th><th>C++</th><th>Fortran</th></tr></thead><tbody><tr><td>GNU</td><td>gcc</td><td>g++</td><td>gfortran</td></tr><tr><td>LLVM</td><td>clang</td><td>clang++</td><td>flang</td></tr></tbody></table><p><code>objdump</code> 将机器码转换为汇编语言<br><code>ldd</code> 显示动态库依赖<br>引号优先搜索当前目录<br>尖括号默认在 &#x2F;usr&#x2F;include 目录下搜索<br>&lt;&gt;处可以用””<br>“”处不可以用&lt;&gt;<br><code>#pragma once</code> 防止重复包含头文件</p><h2 id="现代cmake"><a href="#现代cmake" class="headerlink" title="现代cmake"></a>现代cmake</h2><p>重要概念：</p><ol><li><p><strong>Project</strong>:<br><code>project()</code>命令用于定义一个项目的名称和版本，它设定了项目的上下文，并允许CMake进行版本检查等。项目是所有构建目标（如库、程序等）的容器。</p></li><li><p><strong>Target</strong>:<br><code>target</code>代表了构建过程中的一个输出实体，如可执行文件、库文件、模块等。<code>library</code>和<code>program</code>是<code>target</code>的两种常见类型。一个项目可以包含多个目标。<code>add_executable()</code>, <code>add_library()</code>, <code>add_custom_target()</code>等命令可添加目标。</p></li><li><p><strong>Program (可执行文件)</strong>:<br>程序通常是指通过<code>add_executable()</code>命令创建的可执行文件目标。它是由源代码文件编译并链接而成的，可以直接在操作系统上运行。</p></li><li><p><strong>Library (库)</strong>:<br>库是通过<code>add_library()</code>命令创建的，它可以是静态库（.a, .lib）或动态库（.so, .dll）。库包含可以被其他程序或库使用的代码和数据。</p></li></ol><ul><li><p>静态库相当于多个.o 文件的集合，编译时会把所有源文件编译成一个 .a 文件，链接时只需链接这个 .a 文件即可。</p></li><li><p>动态库则是指可以被多个程序共享的 .so 文件，它包含了程序运行时所需的共享库代码和数据。</p></li></ul><p>Windows 系统上，动态库通常是 .dll 文件，而在 Linux 系统上，动态库通常是 .so 文件。</p><p>Windows：先找 可执行文件同目录，再找 %PATH%</p><p>Linux: ELF 格式可执行文件的 RPATH ,其次是 &#x2F;usr&#x2F;lib</p><ol start="5"><li><p><strong>Source (源代码)</strong>:<br>源代码是指用编程语言编写的文本文件，这些文件包含程序或库的指令。在CMake中，源代码文件通常被指定为<code>add_executable()</code>或<code>add_library()</code>等命令的参数。CMake负责编译这些源代码文件来生成目标（如程序或库）。</p></li><li><p><strong>Package</strong>:<br>它指的是一个可安装和可重用的软件组件，该组件可能包含库、可执行文件、头文件、配置文件等。CMake通过<code>install()</code>命令支持将构建的目标（如库和程序）以及其他文件安装到指定的目录结构中，从而创建可分发的软件包。</p></li></ol><p><a href="https://learn.microsoft.com/zh-cn/vcpkg/get_started/get-started?pivots=shell-bash">CMake和vcpkg的安装与使用</a></p><p>一些反复出现的命令：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>()                       <span class="comment">#  直接插入另一个文件内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>()                  <span class="comment">#   查找并加载外部项目（如库、框架等）的配置文件</span></span><br><span class="line"><span class="keyword">find_library</span>()                  <span class="comment">#   查找并设置指定名称的库文件的路径</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>()                   <span class="comment">#   用于添加一个库目标到项目中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">target_sources</span>()                <span class="comment">#   向目标（如库或可执行文件）添加源文件</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>()         <span class="comment">#  添加要链接的库 </span></span><br><span class="line"><span class="keyword">target_include_directories</span>()    <span class="comment">#  添加头文件搜索路径 </span></span><br></pre></td></tr></table></figure><h3 id="根目录中的CMakeLists-txt文件"><a href="#根目录中的CMakeLists-txt文件" class="headerlink" title="根目录中的CMakeLists.txt文件"></a>根目录中的<code>CMakeLists.txt</code>文件</h3><ul><li><code>cmake_minimum_required(VERSION x.y.z)</code>：指定CMake的最低版本要求。</li><li><code>project(MyProject VERSION x.y.z)</code>：定义项目的名称和版本。</li><li><code>find_package()</code>：查找并加载外部项目（如依赖库）的配置文件。</li><li><code>add_subdirectory()</code>：添加子目录，CMake将递归地处理这些子目录中的<code>CMakeLists.txt</code>文件。</li><li>（可选）<code>set()</code> 或 <code>option()</code>：设置全局变量或选项。</li></ul><h3 id="子目录（如src）中的CMakeLists-txt文件"><a href="#子目录（如src）中的CMakeLists-txt文件" class="headerlink" title="子目录（如src）中的CMakeLists.txt文件"></a>子目录（如<code>src</code>）中的<code>CMakeLists.txt</code>文件</h3><p>子目录中的<code>CMakeLists.txt</code>文件通常负责定义该子目录下的目标（如源文件、库、可执行文件）以及它们之间的依赖关系。</p><ul><li><code>add_executable()</code> 或 <code>add_library()</code>：定义可执行文件或库目标，并列出该目标的源文件。</li><li><code>target_sources()</code>：向已定义的目标添加额外的源文件。</li><li><code>target_include_directories()</code>：为目标指定包含目录，以便编译器能够找到这些目录下的头文件。</li><li><code>target_compile_definitions()</code>：为目标指定编译定义。</li><li><code>target_compile_options()</code>：为目标指定编译选项。</li><li><code>target_link_libraries()</code>：指定目标应该链接哪些库。</li><li>（可选）<code>include()</code>：包含其他CMake文件，以重用配置或函数。</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>项目根目录的<code>CMakeLists.txt</code>：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(MyLargeProject VERSION <span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找并加载依赖库</span></span><br><span class="line"><span class="keyword">find_package</span>(Boost REQUIRED COMPONENTS filesystem)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加子目录</span></span><br><span class="line"><span class="keyword">add_subdirectory</span>(src)</span><br></pre></td></tr></table></figure><p><code>src</code>目录下的<code>CMakeLists.txt</code>：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义库</span></span><br><span class="line"><span class="keyword">add_library</span>(MyLib STATIC</span><br><span class="line">    MyLib.cpp</span><br><span class="line">    MyLibHelper.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为库指定包含目录</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(MyLib PRIVATE <span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义可执行文件</span></span><br><span class="line"><span class="keyword">add_executable</span>(MyApp</span><br><span class="line">    main.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接库到可执行文件</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(MyApp PRIVATE MyLib)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果MyLib还依赖于Boost</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(MyLib PRIVATE Boost::filesystem)</span><br></pre></td></tr></table></figure><p>在这个例子中，根目录的<code>CMakeLists.txt</code>负责设置CMake版本、项目名称和版本，查找依赖库，并添加<code>src</code>子目录。而<code>src</code>目录下的<code>CMakeLists.txt</code>则定义了库<code>MyLib</code>和可执行文件<code>MyApp</code>，并指定了它们之间的依赖关系以及包含目录。</p><h3 id="命令行调用"><a href="#命令行调用" class="headerlink" title="命令行调用"></a>命令行调用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake -B build -DCMAKE_BUILD_TYPE=Release</span><br><span class="line">cmake --build build --parallel 4</span><br><span class="line">cmake --build build --target install</span><br></pre></td></tr></table></figure><h2 id="命令行技巧"><a href="#命令行技巧" class="headerlink" title="命令行技巧"></a>命令行技巧</h2><p><code>cmake -Bbuild -DCMAKE_CXX_COMPILER=clang++</code><br><code>make --dry-run -C build</code> 预览构建过程，进入build目录去查找Makefile文件<br><code>cmake -Bbuild -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_STANDARD=20</code></p><h3 id="D-选项：指定配置变量（又称缓存变量）"><a href="#D-选项：指定配置变量（又称缓存变量）" class="headerlink" title="-D 选项：指定配置变量（又称缓存变量）"></a>-D 选项：指定配置变量（又称缓存变量）</h3><p>CMake 项目的构建分为两步：</p><ul><li><code>cmake -B build</code> 配置阶段（configure），检测环境并生成构建规则，在 build 目录下生成本地构建系统能识别的项目文件（Makefile 或 .sln）</li><li><code>cmake --build build</code>，构建阶段（build），调用编译器来编译代码</li></ul><p>在配置阶段可以通过 -D 设置缓存变量。<br>第二次配置时，之前的 -D 添加仍然会被保留。</p><ul><li><code>cmake -B build -DCMAKE_INSTALL_PREFIX=/opt/openvdb-8.0</code><br>设置安装路径为 &#x2F;opt&#x2F;openvdb-8.0（会安装到 &#x2F;opt&#x2F;openvdb-8.0&#x2F;lib&#x2F;libopenvdb.so）</li><li><code>cmake -B build -DCMAKE_BUILD_TYPE=Release</code><br>设置构建模式为发布模式（开启全部优化）</li><li><code>cmake -B build</code>   第二次配置时没有 -D 参数，但是之前的 -D 设置的变量都会被保留<br>（此时缓存里仍有你之前定义的 CMAKE_BUILD_TYPE 和 CMAKE_INSTALL_PREFIX）</li></ul><h3 id="G-选项：指定要用的生成器"><a href="#G-选项：指定要用的生成器" class="headerlink" title="-G 选项：指定要用的生成器"></a>-G 选项：指定要用的生成器</h3><ul><li>Linux 系统上的 CMake 默认用是 Unix Makefiles 生成器；Windows 系统默认是 Visual Studio 2019 生成器；MacOS 系统默认是 Xcode 生成器。</li><li>可以用 -G 参数改用别的生成器，例如 <code>cmake -GNinja</code> 会生成 Ninja 这个构建系统的构建规则。Ninja 是一个高性能，跨平台的构建系统，Linux、Windows、MacOS 上都可以用。</li><li>而 Ninja 则是专为性能优化的构建系统，和 CMake 结合是行业标准。</li><li>性能上：Ninja &gt; Makefile &gt; MSBuild</li></ul><h2 id="添加源文件"><a href="#添加源文件" class="headerlink" title="添加源文件"></a>添加源文件</h2><p>当源码在同一目录下的多文件中：</p><p>使用 GLOB 自动查找当前目录下指定扩展名的文件，实现批量添加源文件<br>启用 CONFIGURE_DEPENDS 选项，当添加新文件时，自动更新变量</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(main)</span><br><span class="line"><span class="keyword">file</span>(GLOB sources CONFIGURE_DEPENDS *.cpp *.h)</span><br><span class="line"><span class="keyword">target_sources</span>(main PUBLIC <span class="variable">$&#123;sources&#125;</span>)</span><br></pre></td></tr></table></figure><p>当源码在子文件中：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(main)</span><br><span class="line"><span class="keyword">aux_source_directory</span>(. sources)         <span class="comment">#  aux_source_directory 自动搜集需要的文件后缀名</span></span><br><span class="line"><span class="keyword">aux_source_directory</span>(mylib sources)</span><br><span class="line"><span class="keyword">target_sources</span>(main PUBLIC <span class="variable">$&#123;sources&#125;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(main)</span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE sources CONFIGURE_DEPENDS *.cpp *.h)  <span class="comment">#  GLOB_RECURSE 自动包含所有子文件夹下的文件</span></span><br><span class="line"><span class="keyword">target_sources</span>(main PUBLIC <span class="variable">$&#123;sources&#125;</span>)</span><br></pre></td></tr></table></figure><p>GLOB_RECURSE 的问题：会把 build 目录里生成的临时 .cpp 文件也加进来</p><p>解决方案：把源码统一放到 src 目录下</p><h2 id="项目配置变量"><a href="#项目配置变量" class="headerlink" title="项目配置变量"></a>项目配置变量</h2><p>CMAKE_BUILD_TYPE 是 CMake 中一个特殊的变量，用于控制构建类型，他的值可以是：</p><ul><li>Debug 调试模式，完全不优化，生成调试信息，方便调试程序</li><li>Release 发布模式，优化程度最高，性能最佳，但是编译比 Debug 慢</li><li>MinSizeRel 最小体积发布，生成的文件比 Release 更小，不完全优化，减少二进制体积</li><li>RelWithDebInfo 带调试信息发布，生成的文件比 Release 更大，因为带有调试的符号信息</li><li>默认情况下 CMAKE_BUILD_TYPE 为空字符串，这时相当于 Debug。</li></ul><p>标准模板：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">NOT</span> CMAKE_BUILD_TYPE)</span><br><span class="line">    <span class="keyword">set</span>(CMAKE_BUILD_TYPE Release)</span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure><h2 id="链接库文件"><a href="#链接库文件" class="headerlink" title="链接库文件"></a>链接库文件</h2><p>main.cpp 调用 mylib.cpp 里的 say_hello 函数</p><h3 id="mylib-作为一个静态库"><a href="#mylib-作为一个静态库" class="headerlink" title="mylib 作为一个静态库"></a>mylib 作为一个静态库</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(mylib STATIC mylib.cpp)</span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span><br><span class="line">target_libraries(main PUBLIC mylib)</span><br></pre></td></tr></table></figure><h3 id="mylib-作为一个动态库"><a href="#mylib-作为一个动态库" class="headerlink" title="mylib 作为一个动态库"></a>mylib 作为一个动态库</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(mylib SHARED mylib.cpp)</span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span><br><span class="line">target_libraries(main PUBLIC mylib)</span><br></pre></td></tr></table></figure><h3 id="mylib-作为一个对象库"><a href="#mylib-作为一个对象库" class="headerlink" title="mylib 作为一个对象库"></a>mylib 作为一个对象库</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(mylib OBJECT mylib.cpp)</span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span><br><span class="line">target_libraries(main PUBLIC mylib)</span><br></pre></td></tr></table></figure><ul><li>对象库类似于静态库，但不生成 .a 文件，只由 CMake 记住该库生成了哪些对象文件</li><li>对象库是 CMake 自创的，绕开了编译器和操作系统的各种繁琐规则，保证了跨平台统一性。</li><li>在自己的项目中，推荐全部用对象库(OBJECT)替代静态库(STATIC)避免跨平台的麻烦。</li><li>对象库仅仅作为组织代码的方式，而实际生成的可执行文件只有一个，减轻了部署的困难。</li><li>对象库可以绕开编译器的不统一：保证不会自动剔除没引用到的对象文件</li><li>虽然动态库也可以避免剔除没引用的对象文件，但引入了运行时链接的麻烦</li></ul><h2 id="设置对象属性的三种方式"><a href="#设置对象属性的三种方式" class="headerlink" title="设置对象属性的三种方式"></a>设置对象属性的三种方式</h2><h3 id="set-property设置单个属性"><a href="#set-property设置单个属性" class="headerlink" title="set_property设置单个属性"></a><code>set_property</code>设置单个属性</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(main main.cpp)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> main PROPERTY CXX_STANDARD <span class="number">17</span>) <span class="comment"># 采用C++17标准进行编译（默认11）  </span></span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> main PROPERTY CXX_STANDARD_REQUIRED <span class="keyword">ON</span>) <span class="comment"># 如果编译器不支持C++17，则直接报错（默认OFF）  </span></span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> main PROPERTY WIN32_EXECUTABLE <span class="keyword">ON</span>) <span class="comment"># 在Windows系统中，运行时不启动控制台窗口，只有GUI界面（默认OFF）  </span></span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> main PROPERTY LINK_WHAT_YOU_USE <span class="keyword">ON</span>) <span class="comment"># 告诉编译器不要自动剔除没有引用符号的链接库（默认OFF）  </span></span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> main PROPERTY LIBRARY_OUTPUT_DIRECTORY <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/lib) <span class="comment"># 设置动态链接库的输出路径（默认$&#123;CMAKE_BINARY_DIR&#125;）  </span></span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> main PROPERTY ARCHIVE_OUTPUT_DIRECTORY <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/lib) <span class="comment"># 设置静态链接库的输出路径（默认$&#123;CMAKE_BINARY_DIR&#125;）  </span></span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> main PROPERTY RUNTIME_OUTPUT_DIRECTORY <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/bin) <span class="comment"># 设置可执行文件的输出路径（默认$&#123;CMAKE_BINARY_DIR&#125;）</span></span><br></pre></td></tr></table></figure><h3 id="set-target-properties-设置多个属性"><a href="#set-target-properties-设置多个属性" class="headerlink" title="set_target_properties 设置多个属性"></a><code>set_target_properties</code> 设置多个属性</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CMakeLists.txt  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 添加可执行文件目标，名为main，依赖于main.cpp文件  </span></span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置main目标的属性  </span></span><br><span class="line"><span class="keyword">set_target_properties</span>(main PROPERTIES  </span><br><span class="line">    CXX_STANDARD <span class="number">17</span>  <span class="comment"># 采用C++17标准进行编译（默认11）  </span></span><br><span class="line">    CXX_STANDARD_REQUIRED <span class="keyword">ON</span>  <span class="comment"># 如果编译器不支持C++17，则直接报错（默认OFF）  </span></span><br><span class="line">    WIN32_EXECUTABLE <span class="keyword">ON</span>  <span class="comment"># 在Windows系统中，运行时不启动控制台窗口，只有GUI界面（默认OFF）  </span></span><br><span class="line">    LINK_WHAT_YOU_USE <span class="keyword">ON</span>  <span class="comment"># 告诉编译器不要自动剔除没有引用符号的链接库（默认OFF）  </span></span><br><span class="line">)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置动态链接库的输出路径  </span></span><br><span class="line"><span class="keyword">set</span>(LIBRARY_OUTPUT_DIRECTORY <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/lib)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置静态链接库的输出路径  </span></span><br><span class="line"><span class="keyword">set</span>(ARCHIVE_OUTPUT_DIRECTORY <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/lib)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置可执行文件的输出路径  </span></span><br><span class="line"><span class="keyword">set</span>(RUNTIME_OUTPUT_DIRECTORY <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/bin)</span><br></pre></td></tr></table></figure><h3 id="set-通过全局变量，让之后创建的所有对象都享有同样的属性"><a href="#set-通过全局变量，让之后创建的所有对象都享有同样的属性" class="headerlink" title="set 通过全局变量，让之后创建的所有对象都享有同样的属性"></a><code>set</code> 通过全局变量，让之后创建的所有对象都享有同样的属性</h3><p>要注意此时 set(CMAKE_xxx) 必须在 add_executable 之前才有效。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3</span>.x) <span class="comment"># 注意：这里假设需要CMake的某个3.x版本，但具体版本号需要您根据需求填写  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置C++标准为17  </span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">17</span>)  </span><br><span class="line"><span class="comment"># 如果编译器不支持C++17，则直接报错  </span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">ON</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 在Windows系统中，运行时不启动控制台窗口，只有GUI界面  </span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_WIN32_EXECUTABLE <span class="keyword">ON</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 告诉编译器不要自动剔除没有引用符号的链接库  </span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_LINK_WHAT_YOU_USE <span class="keyword">ON</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置动态链接库的输出路径  </span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_LIBRARY_OUTPUT_DIRECTORY <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;/lib&quot;</span>)  </span><br><span class="line"><span class="comment"># 注意：原文本中的Set（CMAKE_LIBRARY_OUTPUT_DIRECTORY$&#123;CMAKE_SOURCE_DIR&#125;/lib）缺少了空格和引号，这里已修正  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置静态链接库的输出路径（这里似乎有一个拼写错误，应该是Lib而不是lib，但通常我们会保持一致）  </span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ARCHIVE_OUTPUT_DIRECTORY <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;/lib&quot;</span>)  </span><br><span class="line"><span class="comment"># 注意：原文本中的Set（CMAKE_ARCHIVE_OUTPUT_DIRECTORY $&#123;CMAKE_SOURCE_DIR&#125;/Lib）缺少了空格和可能的拼写错误，这里已修正为常见的lib  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置可执行文件的输出路径  </span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;/bin&quot;</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 添加可执行文件目标  </span></span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span><br></pre></td></tr></table></figure><h3 id="Windows-链接-dll-找不到"><a href="#Windows-链接-dll-找不到" class="headerlink" title="Windows 链接 dll 找不到"></a>Windows 链接 dll 找不到</h3><ul><li>这是因为你的 dll 和 exe 不在同一目录。Windows 比较蠢，他只会找当前 exe 所在目录，然后查找 PATH，找不到就报错。而你的 dll 在其他目录，因此 Windows 会找不到 dll。</li><li>解决1：把 dll 所在位置加到你的 PATH 环境变量里去，一劳永逸。</li><li>解决2：把这个 dll，以及这个 dll 所依赖的其他 dll，全部拷贝到和 exe 文件同一目录下。</li></ul><p>解决1：设置 mylib 对象的 xx_OUTPUT_DIRECTORY 系列属性</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(mylib SHARED mylib.cpp mylib.h)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY RUNTIME_OUTPUT_DIRECTORY <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY ARCHIVE_OUTPUT_DIRECTORY <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY LIBRARY_OUTPUT_DIRECTORY <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY RUNTIME_OUTPUT_DIRECTORY_DEBUG <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY ARCHIVE_OUTPUT_DIRECTORY_DEBUG <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY LIBRARY_OUTPUT_DIRECTORY_DEBUG <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY RUNTIME_OUTPUT_DIRECTORY_RELEASE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY ARCHIVE_OUTPUT_DIRECTORY_RELEASE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)  </span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> mylib PROPERTY LIBRARY_OUTPUT_DIRECTORY_RELEASE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>)</span><br></pre></td></tr></table></figure><h2 id="链接第三方库"><a href="#链接第三方库" class="headerlink" title="链接第三方库"></a>链接第三方库</h2><h3 id="find-package"><a href="#find-package" class="headerlink" title="find_package"></a><code>find_package</code></h3><h4 id="find-package-TBB-REQUIRED-和find-package-TBB-CONFIG-REQUIRED-区别"><a href="#find-package-TBB-REQUIRED-和find-package-TBB-CONFIG-REQUIRED-区别" class="headerlink" title="find_package(TBB REQUIRED)和find_package(TBB CONFIG REQUIRED) 区别"></a><code>find_package(TBB REQUIRED)</code>和<code>find_package(TBB CONFIG REQUIRED)</code> 区别</h4><ul><li>find_package(TBB REQUIRED) 会查找 &#x2F;usr&#x2F;lib&#x2F;cmake&#x2F;TBB&#x2F;TBBConfig.cmake 这个配置文件，并根据里面的配置信息创建 TBB::tbb 这个伪对象（他实际指向真正的 tbb 库文件路径 &#x2F;usr&#x2F;lib&#x2F;libtbb.so），之后通过 target_link_libraries 链接 TBB::tbb 就可以正常工作了。</li><li>其实更好的是通过 find_package(TBB CONFIG REQUIRED)，添加了一个 CONFIG 选项。这样他会优先查找 TBBConfig.cmake（系统自带的）而不是 FindTBB.cmake（项目作者常把他塞在 cmake&#x2F; 目录里并添加到 CMAKE_MODULE_PATH）。这样能保证寻找包的这个 .cmake 脚本是和系统自带的 tbb 版本是适配的，而不是项目作者当年下载的那个版本的 .cmake 脚本。</li><li>当然，如果你坚持要用 <code>find_package(TBB REQUIRED)</code> 也是可以的。</li><li>没有 CONFIG 选项：先找 FindTBB.cmake，再找 TBBConfig.cmake，找不到则报错</li><li>有 CONFIG 选项：只会找 TBBConfig.cmake，找不到则报错<br>此外，一些老年项目（例如 OpenVDB）只提供 Find 而没有 Config 文件，这时候就必须用 <code>find_package(OpenVDB REQUIRED)</code> 而不能带 CONFIG 选项。</li></ul><h4 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h4><p><code>find_package</code> 生成的伪对象(imported target)都按照“包名::组件名”的格式命名。<br>你可以在 <code>find_package</code> 中通过 <code>COMPONENTS</code> 选项，后面跟随一个列表表示需要用的组件。</p><p>示例:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(Qt5 COMPONENTS Widgets Gui REQUIRED)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(main PUBLIC Qt5::Widgets Qt5::Gui)</span><br></pre></td></tr></table></figure><h2 id="输出与变量"><a href="#输出与变量" class="headerlink" title="输出与变量"></a>输出与变量</h2><p>message(STATUS “…”) 表示信息类型是状态信息，有 – 前缀<br>message(WARNING “…”) 表示是警告信息<br>message(AUTHOR_WARNING “…”) 表示是仅仅给项目作者看的警告信息<br>AUTHOR_WARNING 的不同之处：可以通过 -Wno-dev 关闭<br>message(FATAL_ERROR “…”) 表示是错误信息，会终止 CMake 的运行<br>message(SEND_ERROR “…”) 表示是错误信息，但之后的语句仍继续执行</p><h2 id="变量与缓存"><a href="#变量与缓存" class="headerlink" title="变量与缓存"></a>变量与缓存</h2><p>清除缓存，其实只需删除 build&#x2F;CMakeCache.txt 就可以了<br>设置缓存变量<br>语法是：<code>set(变量名 “变量值” CACHE 变量类型 “注释”)</code><br>更新缓存变量的正确方法，是通过命令行参数：<code>cmake -B build -Dmyvar=world</code><br>缓存变量更新：删 build<br>set 可以在后面加一个 FORCE 选项，表示不论缓存是否存在，都强制更新缓存。<br>不过这样会导致没办法用 -Dmyvar&#x3D;othervalue 来更新缓存变量。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>05后的童年回忆——零食篇</title>
      <link href="/2024/07/23/snack/"/>
      <url>/2024/07/23/snack/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在这里找寻记忆中模糊而又清晰的童年<br>按拼音首字母不严谨排序</p><h3 id="百奇"><a href="#百奇" class="headerlink" title="百奇"></a>百奇</h3><p><img src="/images/snack/%E7%99%BE%E5%A5%87.png" alt="百奇"></p><h3 id="棒冰"><a href="#棒冰" class="headerlink" title="棒冰"></a>棒冰</h3><p><img src="/images/snack/%E6%A3%92%E5%86%B01.png" alt="棒冰1"></p><p><img src="/images/snack/%E4%B8%89%E8%89%B2%E5%BF%83%E9%A6%99%E9%9B%AA%E7%B3%95.png" alt="雪糕"></p><p><img src="/images/snack/%E6%A3%92%E5%86%B03.png" alt="棒冰3"></p><p><img src="/images/snack/%E5%A4%A7%E5%B8%83%E4%B8%81.png" alt="大布丁"></p><p><img src="/images/snack/%E7%BB%BF%E8%B1%86%E6%B2%99%E9%9B%AA%E7%B3%95.png" alt="绿豆沙雪糕"></p><p><img src="/images/snack/%E7%BB%BF%E8%88%8C%E5%A4%B4%E9%9B%AA%E7%B3%95.png" alt="绿舌头雪糕"></p><h3 id="饼干"><a href="#饼干" class="headerlink" title="饼干"></a>饼干</h3><p><img src="/images/snack/%E9%A5%BC%E5%B9%B21.png" alt="饼干1"></p><p><img src="/images/snack/%E5%A5%A5%E5%88%A9%E5%A5%A5.png" alt="奥利奥"></p><p><img src="/images/snack/%E8%84%86%E8%84%86%E9%B2%A8.png" alt="脆脆鲨"></p><p><img src="/images/snack/%E8%B6%A3%E5%A4%9A%E5%A4%9A%E5%B7%A7%E5%85%8B%E5%8A%9B%E6%9B%B2%E5%A5%87.png" alt="趣多多巧克力曲奇"></p><p><img src="/images/snack/%E7%89%9B%E5%A5%B6%E9%A5%BC%E5%B9%B2.png" alt="牛奶饼干"></p><h3 id="冰杨梅"><a href="#冰杨梅" class="headerlink" title="冰杨梅"></a>冰杨梅</h3><p><img src="/images/snack/%E5%86%B0%E6%9D%A8%E6%A2%85.png" alt="冰杨梅"></p><h3 id="怪味花生"><a href="#怪味花生" class="headerlink" title="怪味花生"></a>怪味花生</h3><p><img src="/images/snack/%E6%80%AA%E5%91%B3%E8%8A%B1%E7%94%9F.png" alt="怪味花生"></p><h3 id="果然多"><a href="#果然多" class="headerlink" title="果然多"></a>果然多</h3><p><img src="/images/snack/%E6%9E%9C%E7%84%B6%E5%A4%9A.png" alt="果然多"></p><h3 id="猴王丹"><a href="#猴王丹" class="headerlink" title="猴王丹"></a>猴王丹</h3><p><img src="/images/snack/%E7%8C%B4%E7%8E%8B%E4%B8%B9.png" alt="猴王丹"></p><h3 id="海苔"><a href="#海苔" class="headerlink" title="海苔"></a>海苔</h3><p><img src="/images/snack/%E6%B5%B7%E8%8B%94.png" alt="海苔"></p><p><img src="/images/snack/%E6%B5%B7%E8%8B%942.png" alt="海苔2"></p><h3 id="好多鱼"><a href="#好多鱼" class="headerlink" title="好多鱼"></a>好多鱼</h3><p><img src="/images/snack/%E5%A5%BD%E5%A4%9A%E9%B1%BC.png" alt="好多鱼"></p><h3 id="椒盐土豆"><a href="#椒盐土豆" class="headerlink" title="椒盐土豆"></a>椒盐土豆</h3><p><img src="/images/snack/%E6%A4%92%E7%9B%90%E5%9C%9F%E8%B1%86.png" alt="椒盐土豆"></p><h3 id="健达奇趣蛋"><a href="#健达奇趣蛋" class="headerlink" title="健达奇趣蛋"></a>健达奇趣蛋</h3><p><img src="/images/snack/%E5%81%A5%E8%BE%BE%E5%A5%87%E8%B6%A3%E8%9B%8B.png" alt="健达奇趣蛋"></p><h3 id="烤土豆"><a href="#烤土豆" class="headerlink" title="烤土豆"></a>烤土豆</h3><p><img src="/images/snack/%E7%83%A4%E5%9C%9F%E8%B1%86.png" alt="烤土豆"></p><h3 id="可爱多"><a href="#可爱多" class="headerlink" title="可爱多"></a>可爱多</h3><p><img src="/images/snack/%E5%8F%AF%E7%88%B1%E5%A4%9A.png" alt="可爱多"></p><h3 id="可口可乐"><a href="#可口可乐" class="headerlink" title="可口可乐"></a>可口可乐</h3><p><img src="/images/snack/%E5%8F%AF%E5%8F%A3%E5%8F%AF%E4%B9%90.png" alt="可口可乐"></p><h3 id="辣条"><a href="#辣条" class="headerlink" title="辣条"></a>辣条</h3><p>小时候老师不让吃，说味大。现在，小时候的味道它最大。<br>绿爽，小滑头，卫龙，唐僧肉……</p><p><img src="/images/snack/%E8%BE%A3%E6%9D%A1.jpg" alt="辣条"></p><p><img src="/images/snack/%E7%BB%BF%E7%88%BD.jpg" alt="绿爽"></p><p><img src="/images/snack/%E5%B0%8F%E6%BB%91%E5%A4%B4.png" alt="小滑头"></p><h3 id="咪咪"><a href="#咪咪" class="headerlink" title="咪咪"></a>咪咪</h3><p><img src="/images/snack/%E5%92%AA%E5%92%AA.jpg" alt="咪咪"></p><h3 id="妙脆角"><a href="#妙脆角" class="headerlink" title="妙脆角"></a>妙脆角</h3><p><img src="/images/snack/%E5%A6%99%E8%84%86%E8%A7%92.png" alt="妙脆角"></p><h3 id="木糖醇"><a href="#木糖醇" class="headerlink" title="木糖醇"></a>木糖醇</h3><p><img src="/images/snack/%E6%9C%A8%E7%B3%96%E9%86%87.png" alt="木糖醇"></p><h3 id="魔法士干脆面"><a href="#魔法士干脆面" class="headerlink" title="魔法士干脆面"></a>魔法士干脆面</h3><p>集卡嘞</p><p><img src="/images/snack/%E9%AD%94%E6%B3%95%E5%A3%AB%E5%B9%B2%E8%84%86%E9%9D%A2.jpg" alt="魔法士干脆面"></p><h3 id="魔古力"><a href="#魔古力" class="headerlink" title="魔古力"></a>魔古力</h3><p><img src="/images/snack/%E9%AD%94%E5%8F%A4%E5%8A%9B.png" alt="魔古力"></p><h3 id="奶片"><a href="#奶片" class="headerlink" title="奶片"></a>奶片</h3><p><img src="/images/snack/%E5%A5%B6%E7%89%87.jpg" alt="奶片"></p><h3 id="泡泡糖"><a href="#泡泡糖" class="headerlink" title="泡泡糖"></a>泡泡糖</h3><p><img src="/images/snack/%E6%B3%A1%E6%B3%A1%E7%B3%96.jpg" alt="泡泡糖"></p><h3 id="啤酒豆"><a href="#啤酒豆" class="headerlink" title="啤酒豆"></a>啤酒豆</h3><p><img src="/images/snack/%E5%95%A4%E9%85%92%E8%B1%86.jpg" alt="啤酒豆"></p><h3 id="馓子"><a href="#馓子" class="headerlink" title="馓子"></a>馓子</h3><p><img src="/images/snack/%E9%A6%93%E5%AD%90.png" alt="馓子"></p><h3 id="上好佳虾片"><a href="#上好佳虾片" class="headerlink" title="上好佳虾片"></a>上好佳虾片</h3><p><img src="/images/snack/%E4%B8%8A%E5%A5%BD%E4%BD%B3%E8%99%BE%E7%89%87.png" alt="上好佳虾片"></p><h3 id="薯片"><a href="#薯片" class="headerlink" title="薯片"></a>薯片</h3><p><img src="/images/snack/%E5%8F%AF%E6%AF%94%E5%85%8B.png" alt="可比克"></p><p><img src="/images/snack/%E4%B9%90%E4%BA%8B.png" alt="乐事"></p><h3 id="闪电爽"><a href="#闪电爽" class="headerlink" title="闪电爽"></a>闪电爽</h3><p><img src="/images/snack/%E9%97%AA%E7%94%B5%E7%88%BD.png" alt="闪电爽"></p><h3 id="糖果"><a href="#糖果" class="headerlink" title="糖果"></a>糖果</h3><p><img src="/images/snack/%E7%B3%96%E6%9E%9C1.png" alt="单色脆皮软糖"></p><p><img src="/images/snack/%E7%B3%96%E6%9E%9C2.png" alt="吸管糖"></p><p><img src="/images/snack/%E7%B3%96%E6%9E%9C3.png" alt="糖果3"></p><p><img src="/images/snack/%E5%8A%B2%E8%B7%B3.png" alt="劲跳"></p><p><img src="/images/snack/%E7%B3%96%E6%9E%9C5.png" alt="糖果5"></p><p><img src="/images/snack/%E6%B4%BB%E8%AF%A5.png" alt="活该"></p><p><img src="/images/snack/%E7%8E%89%E7%B1%B3%E7%B3%96.png" alt="玉米糖"></p><p><img src="/images/snack/%E6%A3%89%E8%8A%B1%E7%B3%961.png" alt="棉花糖1"></p><p><img src="/images/snack/%E6%A3%89%E8%8A%B1%E7%B3%962.png" alt="棉花糖2"></p><p><img src="/images/snack/%E5%AE%8F%E6%BA%90%E7%88%86%E7%82%B8%E6%9E%9C%E6%B1%BD%E7%A1%AC%E7%B3%96.png" alt="宏源爆炸果汽硬糖"></p><p><img src="/images/snack/%E4%BB%94%E4%BB%94%E6%A3%92.png" alt="仔仔棒"></p><p><img src="/images/snack/%E6%97%BA%E4%BB%94qq%E7%B3%96.jpg" alt="旺仔qq糖"></p><h3 id="桃豆"><a href="#桃豆" class="headerlink" title="桃豆"></a>桃豆</h3><p><img src="/images/snack/%E6%A1%83%E8%B1%86.png" alt="桃豆"></p><h3 id="武汉热干面"><a href="#武汉热干面" class="headerlink" title="武汉热干面"></a>武汉热干面</h3><p><img src="/images/snack/%E6%AD%A6%E6%B1%89%E7%83%AD%E5%B9%B2%E9%9D%A2.jpg" alt="武汉热干面"></p><h3 id="五彩绳"><a href="#五彩绳" class="headerlink" title="五彩绳"></a>五彩绳</h3><p><img src="/images/snack/%E4%BA%94%E5%BD%A9%E7%BB%B3.png" alt="五彩绳"></p><h3 id="无花果切丝"><a href="#无花果切丝" class="headerlink" title="无花果切丝"></a>无花果切丝</h3><p><img src="/images/snack/%E6%97%A0%E8%8A%B1%E6%9E%9C%E5%88%87%E4%B8%9D.png" alt="无花果切丝"></p><h3 id="旺仔小馒头"><a href="#旺仔小馒头" class="headerlink" title="旺仔小馒头"></a>旺仔小馒头</h3><p><img src="/images/snack/%E6%97%BA%E4%BB%94%E5%B0%8F%E9%A6%92%E5%A4%B4.png" alt="旺仔小馒头"></p><h3 id="喜之郎果冻"><a href="#喜之郎果冻" class="headerlink" title="喜之郎果冻"></a>喜之郎果冻</h3><p><img src="/images/snack/%E5%96%9C%E4%B9%8B%E9%83%8E%E6%9E%9C%E5%86%BB.jpg" alt="喜之郎果冻"></p><h3 id="香肠"><a href="#香肠" class="headerlink" title="香肠"></a>香肠</h3><p><img src="/images/snack/%E9%A6%99%E8%82%A0.png" alt="香肠"></p><h3 id="小石豆"><a href="#小石豆" class="headerlink" title="小石豆"></a>小石豆</h3><p><img src="/images/snack/%E5%B0%8F%E7%9F%B3%E8%B1%86.png" alt="小石豆"></p><h3 id="雪莲"><a href="#雪莲" class="headerlink" title="雪莲"></a>雪莲</h3><p><img src="/images/snack/%E9%9B%AA%E8%8E%B2.png" alt="雪莲"></p><h3 id="星球杯"><a href="#星球杯" class="headerlink" title="星球杯"></a>星球杯</h3><p><img src="/images/snack/%E6%98%9F%E7%90%83%E6%9D%AF.png" alt="星球杯"></p><h3 id="饮料"><a href="#饮料" class="headerlink" title="饮料"></a>饮料</h3><p><img src="/images/snack/%E9%A5%AE%E6%96%991.png" alt="营养快线"></p><p><img src="/images/snack/AD%E9%92%99%E5%A5%B6.png" alt="AD钙奶"></p><p><img src="/images/snack/%E7%88%BD%E6%AD%AA%E6%AD%AA.png" alt="爽歪歪"></p><h3 id="一根葱"><a href="#一根葱" class="headerlink" title="一根葱"></a>一根葱</h3><p>最喜欢吮手指的一集。</p><p><img src="/images/snack/%E4%B8%80%E6%A0%B9%E8%91%B1.jpg" alt="一根葱"></p><h3 id="渔趣"><a href="#渔趣" class="headerlink" title="渔趣"></a>渔趣</h3><p><img src="/images/snack/%E6%B8%94%E8%B6%A3.png" alt="渔趣"></p><h3 id="禛香肥牛"><a href="#禛香肥牛" class="headerlink" title="禛香肥牛"></a>禛香肥牛</h3><p><img src="/images/snack/%E7%A6%9B%E9%A6%99%E8%82%A5%E7%89%9B.jpg" alt="禛香肥牛"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔法原理</title>
      <link href="/2024/07/18/network/"/>
      <url>/2024/07/18/network/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7a5ad2ea2ccb283ea1eba1638cdb74823ff85407fccb0e5fefe405f1f044b308"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word排版——从制作一份期末试卷给同学模考开始</title>
      <link href="/2024/07/11/word/"/>
      <url>/2024/07/11/word/</url>
      
        <content type="html"><![CDATA[<h1 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h1><p>    在期末考前，我受启发于上学期某同学的伪造期末试卷，这学期也制作了一份C++的仿真期末试卷，部分页面如下：</p><p><img src="/images/word/1.png" alt="期末卷1"><br><img src="/images/word/2.png" alt="期末卷2"></p><p>    其实还可以再加上页码，发给同学的时候再给个文档加密，那样就更加惟妙惟肖，不过这样也已经可以以假乱真，收获到一批小问号和“不是哥们”。</p><p>    能获得如此效果，首先是因为 Word 排版的比较好，保证第一眼不会被识破；其次是因为考点真的基本上全覆盖，能让人做完试卷还有将信将疑，回味无穷的效果。</p><p>    所以我们接下来介绍的是如何进行如此高仿真的 Word 排版。（虽然制作这份试卷用不到多少内容）</p><hr><h1 id="我的Word-排版学习"><a href="#我的Word-排版学习" class="headerlink" title="我的Word 排版学习"></a>我的Word 排版学习</h1><p>    首先是一个B站视频：</p><p>    【Word教程 | 拜托三连了！全B站最用心（没有之一）的Word免费课程！OFFICE&#x2F;WPS&#x2F;办公软件&#x2F;排版&#x2F;论文&#x2F;毕业&#x2F;文档&#x2F;行政&#x2F;打印&#x2F;标书&#x2F;报告&#x2F;方案】 <a href="https://www.bilibili.com/video/BV1t64y1x7GA/?share_source=copy_web">https://www.bilibili.com/video/BV1t64y1x7GA/?share_source=copy_web</a></p><p>    就平常使用，写写论文报告，推荐第2、3、15集，搭配 global speed 插件食用更佳，快捷键 <code>s</code> 和 <code>d</code> 反复切换视频速度，快速了解基本 Word 操作。</p><p><img src="/images/word/3.png" alt="插件"></p><p>    然后是一个B站视频（通过 csdiy.wiki 指路发现）：</p><p>    【Word论文排版教程】 <a href="https://www.bilibili.com/video/BV1YQ4y1M73G/?share_source=copy_web&vd_source=4e6e3d05c54fbafa49b2a00b5cc81815">https://www.bilibili.com/video/BV1YQ4y1M73G/?share_source=copy_web&amp;vd_source=4e6e3d05c54fbafa49b2a00b5cc81815</a></p><p>    指路教程地址：<a href="https://csdiy.wiki/%E5%BF%85%E5%AD%A6%E5%B7%A5%E5%85%B7/thesis/">毕业论文 - CS自学指南 (csdiy.wiki)</a></p><p>    最后是一个查看快捷键的视频（我认为想要快速了解一个软件有什么功能，通过查看它的快捷键手册是一个非常好的途径，既可以全面了解它的功能，又可以学会迅速使用它的方法）：</p><p>    【如何查看并设置word中的快捷键】 <a href="https://www.bilibili.com/video/BV1ja411d7y6/?share_source=copy_web&vd_source=4e6e3d05c54fbafa49b2a00b5cc81815">https://www.bilibili.com/video/BV1ja411d7y6/?share_source=copy_web&amp;vd_source=4e6e3d05c54fbafa49b2a00b5cc81815</a></p><hr><h1 id="一些-Word-操作回顾"><a href="#一些-Word-操作回顾" class="headerlink" title="一些 Word 操作回顾"></a>一些 Word 操作回顾</h1><p>首先是放弃 WPS 作为默认应用:</p><p><img src="/images/word/4.png" alt="默认应用"></p><p>印象比较深刻的（杂乱的回忆）：</p><ul><li><p>按住 <code>alt</code> 键，进行矩形框选中；</p></li><li><p>文档属性设置；</p></li><li><p>自动编号，解决删除一个编号，下面编号不变或者都变的问题；</p></li><li><p>多级列表的设置；</p></li><li><p>首行缩进，悬挂缩进，缩进与标尺的结合应用；</p></li><li><p><code>Fn+F4</code> 重复上一次操作；</p></li><li><p><code>Fn+F12</code> 另存文件；</p></li><li><p>保护文档（原来 c 和 c++ 报告中黄色的那块区域是特选出来可供编辑的区域）；</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2024/07/07/blog/"/>
      <url>/2024/07/07/blog/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><h3 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h3><p>我看到的第一篇博客，是来自于一个学姐。</p><p><a href="https://www.dilettante258.cyou/">浅尝辄止 - Dilettante258 | Home</a></p><p>简约美观的页面，奇怪的cyou域名，和内容中对于强化学习的热爱，给了我眼前一亮的感觉。</p><p>之后在计算机的学习过程中，我逐步了解到阮一峰，廖雪峰等知名ip，还有一些页面让我很来电的博客。</p><p><a href="https://fangkaipeng.com/?tag=cs231n">CS231n – 码途拾遗 (fangkaipeng.com)</a></p><p>其中，我现在最喜欢看的还得数之前一起进行开发过的朋友的博客，他的博客尤为触动我心。</p><p><a href="https://mx-pai.github.io/">Max (mx-pai.github.io)</a></p><p>他的一些关于写博客的思想和我有些不谋而合。</p><h3 id="主要教程"><a href="#主要教程" class="headerlink" title="主要教程"></a>主要教程</h3><p><a href="https://markdown.com.cn/basic-syntax/">markdown 语法教程</a></p><p><a href="https://www.bilibili.com/video/BV1kR4y1n7zZ/?share_source=copy_web&vd_source=4e6e3d05c54fbafa49b2a00b5cc81815">【方草地公开课】搭建第一个个人博客</a></p><div class="note warning flat"><p>视频中淘宝的源已经过期，命令可更换为 <code>npm config set registry http://registry.npmmirror.com</code><br>node 官网也更新了，和视频中的界面不一样，需要注意。</p></div><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">GitHub Pages + Hexo搭建个人博客网站，史上最全教程_hexo博客-CSDN博客</a></p><p>主题配置：<br><a href="https://hexo.io/zh-cn/docs/">hexo 官网</a><br><a href="https://www.bilibili.com/video/BV1Ko4y1S7mv/?share_source=copy_web&vd_source=4e6e3d05c54fbafa49b2a00b5cc81815">使用Hexo搭建个人博客手摸手教学(10)|ButterFly主题配置一</a><br><a href="https://zxblog.eu.org/posts/5a75/#%E6%96%B0%E6%89%8B%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2">2024全教程</a></p><h3 id="主要问题"><a href="#主要问题" class="headerlink" title="主要问题"></a>主要问题</h3><h4 id="图片路径"><a href="#图片路径" class="headerlink" title="图片路径"></a>图片路径</h4><p>这是我在搭建博客时花时间最长的地方，因为图片路径问题导致图片加载不出来。相关资料最终指向官网。<br>正确的路径：<br><img src="/images/blog/image.png"><br>为什么我花了那么长时间呢，因为正确的路径在本地是预览不出来的，就像上图中一样。而我之前错误的路径一直是能够在本地预览成功的状态。</p><div class="note warning flat"><p>由于<code>hexo-asset-image</code>插件更新出现的新问题：<code>hexo-asset-image</code>在Hexo 5及更高版本中已失效。<br>对我来说没有用的解决方法: 卸载原插件，使用<code>cnpm install--save hexo-asset-img</code>安装新的插件，并调整图片引用格式为<code>![alt](文章名/图片名.png)</code>。<br>我的最终解决方案：在images文件夹里新建各篇博客的对应文件夹，并将图片放入对应文件夹，然后在md文件中引用时使用<code>![alt](images/文章名/图片名.png)</code>格式。所以，那俩插件没一个有用的。</p></div><h4 id="css样式文件丢失"><a href="#css样式文件丢失" class="headerlink" title="css样式文件丢失"></a>css样式文件丢失</h4><p>这是朋友在搭建博客时出现的问题:<br><img src="/images/blog/aurora0x27.png"><br>本地预览成功，而部署到 Github Pages 上后，就会看到上面的问题。<br>解决方法：<br><img src="/images/blog/bug3.png"><br>添加 root 字段即可。<br>但是我在搭建博客的过程中没有这个字段照样是成功的。<br>原因不明。</p><h4 id="后期美化"><a href="#后期美化" class="headerlink" title="后期美化"></a>后期美化</h4><p><a href="https://butterfly.zhheo.com/create.html">官方美化教程</a><br><a href="https://akilar.top/posts/57291286/">友链</a><br><a href="https://moonshuo.cn/posts/43310.html">美化</a><br><a href="https://www.nightb.cn/archives/tian-jia-ri-li----hexomei-hua#%E6%96%B9%E6%B3%95%E4%B8%80">添加日历</a></p><h4 id="相对链接"><a href="#相对链接" class="headerlink" title="相对链接"></a>相对链接</h4><p>如果这里设置成true，博客内网站就无法自由跳转</p><p><img src="/images/blog/relative_link.png"></p><h4 id="静态站点生成器-MkDocs"><a href="#静态站点生成器-MkDocs" class="headerlink" title="静态站点生成器 MkDocs"></a>静态站点生成器 MkDocs</h4><p>MkDocs是一个基于Python的静态站点生成器，可以快速将Markdown格式的文档转换为静态网站，非常适合用于项目文档、知识库和个性化博客的构建。<br><a href="https://squidfunk.github.io/mkdocs-material/getting-started/">MkDocs</a></p><h4 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a><del>草稿</del></h4><p><del><a href="https://novnan.github.io/Hexo/hexo-draft/">如何在hexo中实现草稿功能</a></del></p><hr><h2 id="markdown-中刚开始容易忽略的地方"><a href="#markdown-中刚开始容易忽略的地方" class="headerlink" title="markdown 中刚开始容易忽略的地方"></a>markdown 中刚开始容易忽略的地方</h2><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>无序列表中，<code>-</code>、<code>+</code>、<code>*</code> 三种符号都可以，但建议统一使用<code>-</code>符号。且无序列表中，<code>-</code>符号后面必须有空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表</span><br><span class="line"><span class="bullet">-</span> 无序列表</span><br><span class="line"><span class="bullet">-</span> 无序列表</span><br></pre></td></tr></table></figure><p>有序列表中，数字后面必须有空格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表</span><br><span class="line"><span class="bullet">2.</span> 有序列表</span><br><span class="line"><span class="bullet">3.</span> 有序列表</span><br></pre></td></tr></table></figure><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>三个或三个以上的<code>*</code>、<code>-</code>、<code>+</code>符号，都可以。且符号上下行都需要空行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"><span class="strong">***</span></span></span><br><span class="line"><span class="strong"><span class="section">---</span></span></span><br></pre></td></tr></table></figure><h3 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h3><p>图片链接语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片描述</span>](<span class="link">图片路径</span>)</span><br></pre></td></tr></table></figure><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 表头1 | 表头2 | 表头3 |</span><br><span class="line">| ----- | ----- | ----- |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] 任务1</span><br><span class="line"><span class="bullet">-</span> [ ] 任务2</span><br><span class="line"><span class="bullet">-</span> [x] 任务3</span><br></pre></td></tr></table></figure><h3 id="删除线和强调"><a href="#删除线和强调" class="headerlink" title="删除线和强调"></a>删除线和强调</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br><span class="line"><span class="strong">**强调**</span></span><br></pre></td></tr></table></figure><h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line">不要只为自己寻求幸福。要为所有人寻求幸福。通过仁慈。通过怜悯。</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote><p>不要只为自己寻求幸福。要为所有人寻求幸福。通过仁慈。通过怜悯。</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><h3 id="Hexo-引用块"><a href="#Hexo-引用块" class="headerlink" title="Hexo 引用块"></a>Hexo 引用块</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line">success <span class="strong">**欢迎**</span>[<span class="string">note</span>](<span class="link">.</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary fas fa-home %&#125;</span><br><span class="line">primary</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><div class="note success flat"><p>success <strong>欢迎</strong><a href=".">note</a></p></div><div class="note info flat"><p>info</p></div><div class="note warning flat"><p>warning</p></div><div class="note danger flat"><p>danger</p></div><h3 id="Github-引用块"><a href="#Github-引用块" class="headerlink" title="Github 引用块"></a>Github 引用块</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; [!NOTE]</span></span><br><span class="line"><span class="quote">&gt; [!TIP]</span></span><br><span class="line"><span class="quote">&gt; [!IMPORTANT]</span></span><br><span class="line"><span class="quote">&gt; [!WARNING]</span></span><br><span class="line"><span class="quote">&gt; [!CAUTION]</span></span><br><span class="line"><span class="quote">&gt; [!DANGER]</span></span><br><span class="line"><span class="quote">&gt; [!ATTENTION]</span></span><br><span class="line"><span class="quote">&gt; [!ERROR]</span></span><br><span class="line"><span class="quote">&gt; [!QUESTION]</span></span><br><span class="line"><span class="quote">&gt; [!INFO]</span></span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p><img src="/./images/blog/note.png"></p><h3 id="font-awesome-图标"><a href="#font-awesome-图标" class="headerlink" title="font-awesome 图标"></a>font-awesome 图标</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-adjust&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 md 文件中直接写即可，渲染效果如下：</p><p><i class="fas fa-adjust"></i></p><p><a href="https://www.runoob.com/font-awesome/fontawesome-icons-webapp.html">其他font-awesome图标</a></p><h3 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h3><h4 id="更改字体、大小、颜色"><a href="#更改字体、大小、颜色" class="headerlink" title="更改字体、大小、颜色"></a>更改字体、大小、颜色</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span>我是黑体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span>&gt;</span>我是微软雅黑<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;STCAIYUN&quot;</span>&gt;</span>我是华文彩云<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span>我是红色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#008000</span>&gt;</span>我是绿色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">Blue</span>&gt;</span>我是蓝色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span> <span class="attr">color</span>=<span class="string">green</span> <span class="attr">size</span>=<span class="string">5</span>&gt;</span>我是黑体，绿色，尺寸为5<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color=red>我是红色</font><br><font color=#008000>我是绿色</font><br><font color=Blue>我是蓝色</font><br><font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font></p><h4 id="文字背景色"><a href="#文字背景色" class="headerlink" title="文字背景色"></a>文字背景色</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">violet</span>&gt;</span>背景色<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">#FDF5E6</span>&gt;</span>背景色<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">#C1FFC1</span>&gt;</span>背景色<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">#8470FF</span>&gt;</span>背景色<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><table><tr><td bgcolor=violet>背景色</td></tr></table><table><tr><td bgcolor=#FDF5E6>背景色</td><td bgcolor=#C1FFC1>背景色</td><td bgcolor=#8470FF>背景色</td></tr></table><p>建议使用十六进制颜色代码，rgb渲染效果不好。</p><h4 id="文字居中"><a href="#文字居中" class="headerlink" title="文字居中"></a>文字居中</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>我是居中的文字<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>&gt;</span>我是左对齐的文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>我是右对齐的文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><center>我是居中的文字</center><p align="left">我是左对齐的文字</p><p align="right">我是右对齐的文字</p>]]></content>
      
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
